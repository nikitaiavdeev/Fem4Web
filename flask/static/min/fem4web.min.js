document.getElementById("allSvgImages").innerHTML='\n<svg width="0px" height="0px"">\n    <defs>\n        <marker viewBox="-1 -1 10 10" refX="4" refY="8" id="fitArr" markerWidth="4" markerHeight="4" orient="auto">\n            <g fill="none" stroke-width="2" stroke-linejoin="round" stroke-linecap="round" stroke="#222732">\n                <path d="M0 3l4-3 4 3M4 8V0" />\n            </g>\n        </marker>\n        <marker viewBox="0 0 32 32" refX="16" refY="16" id="node" markerWidth="16" markerHeight="16">\n            <circle cx="16" cy="16" r="4" fill="#fd7000" stroke="#222732" />\n        </marker>\n        <marker id="arr1" orient="auto" overflow="visible">\n            <path fill="#1d3272" d="M5.77 0l-8.65 5V-5l8.65 5z" transform="scale(-.3)" />\n        </marker>\n        <marker id="arr2" orient="auto" overflow="visible">\n            <path fill="#c61d1d" d="M5.77 0l-8.65 5V-5l8.65 5z" transform="scale(-.3)" />\n        </marker>\n        <linearGradient id="fringeGrad" x1="9" x2="91" y1="9" y2="91" gradientUnits="userSpaceOnUse">\n            <stop offset="0" stop-color="#00f" />\n            <stop offset="1" stop-color="red" />\n        </linearGradient>\n    </defs>\n\n    <symbol id="openFile" viewBox="0 0 58 58">\n        <path\n            d="M46.324 52.5H1.565a1.564 1.564 0 0 1-1.51-1.973l10.166-27.871a1.564 1.564 0 0 1 1.51-1.156H56.49c1.03 0 1.51.984 1.51 1.973L47.834 51.344a1.564 1.564 0 0 1-1.51 1.156z"\n            fill="#ff9c4d" />\n        <path\n            d="M50.268 12.5H25l-5-7H1.732C.776 5.5 0 6.275 0 7.232V49.96c.069.002.138.006.205.01L10.22 22.656a1.563 1.563 0 0 1 1.51-1.156H52v-7.268c0-.957-.776-1.732-1.732-1.732z"\n            fill="#fd7000" />\n    </symbol>\n\n    <symbol id="import" viewBox="0 0 58 58">\n        <rect width="58" height="44.677" y="10.568" ry="1.782" fill="#ff9c4d" />\n        <path\n            d="M1.93 2.755A1.93 1.93 0 0 0 0 4.685v7.665c0-.494.2-.938.521-1.26a1.773 1.773 0 0 1 1.26-.521h54.307c-.008 0-.013-.007-.018-.007H27.884L22.31 2.755z"\n            fill="#fd7000" />\n        <path\n            d="M27.5 19.319l10-7.5a1.25 1.25 0 1 1 2 1v3.75h3.75c7.582 0 13.75 6.167 13.75 13.75a1.252 1.252 0 0 1-1.25 1.25 1.25 1.25 0 0 1-1.117-.69l-.296-.588a11.188 11.188 0 0 0-10.062-6.222H39.5v3.75a1.252 1.252 0 0 1-2 1l-10-7.5a1.25 1.25 0 0 1 0-2z"\n            fill="#1d3272" />\n    </symbol>\n\n    <symbol id="import_bdf" viewBox="0 0 56 56">\n        <path fill="#ff9c4dff" d="M36.985 0H7.963C7.155 0 6.5.655 6.5 1.926V55c0 .345.655 1 1.463 1h40.074c.808 0 1.463-.655 1.463-1V12.978c0-.696-.093-.92-.257-1.085L37.607.257A.884.884 0 0036.985 0z"/>\n        <path fill="#fd7000ff" d="M37.5.151V12h11.849z"/>\n        <path fill="#1d3272ff" d="M6.518 16h43v24h-43z"/>\n        <path fill="#eee" d="M20.731 31.329q0 3.447-1.584 5.545-1.585 2.085-4.253 2.085-2.85 0-4.406-2.015l-.125 1.737H8V17.333h2.571v7.964q1.557-1.932 4.295-1.932t4.295 2.07q1.57 2.072 1.57 5.671zm-2.571-.292q0-2.627-1.015-4.059-1.014-1.431-2.918-1.431-2.544 0-3.656 2.363v6.504q1.182 2.363 3.683 2.363 1.849 0 2.877-1.432 1.029-1.431 1.029-4.308zM23.33 31.037q0-3.46 1.64-5.56 1.64-2.112 4.295-2.112 2.64 0 4.183 1.807v-7.84h2.571v21.349h-2.362l-.125-1.612q-1.543 1.89-4.295 1.89-2.613 0-4.267-2.14-1.64-2.14-1.64-5.588zm2.571.292q0 2.557 1.057 4.002 1.056 1.446 2.918 1.446 2.446 0 3.572-2.196v-6.908q-1.153-2.126-3.544-2.126-1.89 0-2.946 1.46-1.057 1.459-1.057 4.322zM41.287 38.681v-13.05H38.91v-1.988h2.377V22.1q0-2.418 1.293-3.739 1.292-1.32 3.655-1.32.89 0 1.765.236l-.139 2.085q-.653-.125-1.39-.125-1.25 0-1.932.737-.68.722-.68 2.084v1.585h3.21v1.987h-3.21v13.051z"/>\n    </symbol>\n\n    <symbol id="import_csv" viewBox="0 0 56 56">\n        <path fill="#ff9c4dff" d="M36.985 0H7.963C7.155 0 6.5.655 6.5 1.926V55c0 .345.655 1 1.463 1h40.074c.808 0 1.463-.655 1.463-1V12.978c0-.696-.093-.92-.257-1.085L37.607.257A.884.884 0 0036.985 0z"/>\n        <path fill="#fd7000ff" d="M37.5.151V12h11.849z"/>\n        <path fill="#1d3272ff" d="M6.518 16h43v24h-43z"/>\n        <path fill="#eee" d="M14.448 33.485q1.325 0 2.315-.803.99-.802 1.097-2.006h2.34q-.066 1.244-.856 2.367-.789 1.124-2.113 1.793-1.311.669-2.783.669-2.956 0-4.709-1.967Q8 31.558 8 28.134v-.415q0-2.114.776-3.76.776-1.645 2.22-2.554 1.459-.91 3.439-.91 2.435 0 4.04 1.458 1.619 1.458 1.726 3.786H17.86q-.107-1.405-1.07-2.3-.95-.91-2.355-.91-1.887 0-2.93 1.364-1.03 1.351-1.03 3.92v.468q0 2.502 1.03 3.853 1.03 1.35 2.943 1.35zM31.411 31.398q0-1.003-.762-1.552-.75-.562-2.636-.963-1.873-.401-2.983-.963-1.097-.562-1.632-1.338-.522-.776-.522-1.846 0-1.78 1.499-3.01 1.511-1.231 3.852-1.231 2.462 0 3.987 1.27 1.539 1.272 1.539 3.252h-2.489q0-1.017-.87-1.753-.856-.736-2.167-.736-1.35 0-2.113.59-.763.588-.763 1.538 0 .896.71 1.35.708.456 2.554.87 1.86.415 3.01.99 1.15.575 1.7 1.392.561.802.561 1.966 0 1.94-1.552 3.117-1.551 1.164-4.026 1.164-1.74 0-3.077-.615-1.338-.616-2.1-1.713-.75-1.11-.75-2.394h2.475q.067 1.244.99 1.98.937.722 2.462.722 1.404 0 2.247-.562.856-.575.856-1.525zM41.886 31.88l3.586-11.117H48l-5.19 14.474h-1.887L35.68 20.763h2.528z"/>\n    </symbol>\n\n    <symbol id="import_ses" viewBox="0 0 56 56">\n        <path fill="#ff9c4dff" d="M36.985 0H7.963C7.155 0 6.5.655 6.5 1.926V55c0 .345.655 1 1.463 1h40.074c.808 0 1.463-.655 1.463-1V12.978c0-.696-.093-.92-.257-1.085L37.607.257A.884.884 0 0036.985 0z"/>\n        <path fill="#fd7000ff" d="M37.5.151V12h11.849z"/>\n        <path fill="#1d3272ff" d="M6.518 16h43v24h-43z"/>\n        <path fill="#eee" d="M17 31.387q0-1-.76-1.547-.747-.56-2.627-.96-1.866-.4-2.973-.96-1.093-.56-1.627-1.333-.52-.774-.52-1.84 0-1.774 1.494-3 1.506-1.227 3.84-1.227 2.453 0 3.973 1.267 1.533 1.266 1.533 3.24h-2.48q0-1.014-.866-1.747-.854-.733-2.16-.733-1.347 0-2.107.586-.76.587-.76 1.534 0 .893.707 1.346.706.454 2.546.867 1.854.413 3 .987 1.147.573 1.694 1.386.56.8.56 1.96 0 1.934-1.547 3.107-1.547 1.16-4.013 1.16-1.734 0-3.067-.613-1.333-.614-2.093-1.707Q8 32.053 8 30.773h2.467q.066 1.24.986 1.974.934.72 2.454.72 1.4 0 2.24-.56.853-.574.853-1.52zM28.667 35.48q-2.934 0-4.774-1.92-1.84-1.933-1.84-5.16v-.453q0-2.147.814-3.827.826-1.693 2.293-2.64 1.48-.96 3.2-.96 2.813 0 4.373 1.853 1.56 1.854 1.56 5.307v1.027H24.52q.053 2.133 1.24 3.453 1.2 1.307 3.04 1.307 1.307 0 2.213-.534.907-.533 1.587-1.413l1.507 1.173q-1.814 2.787-5.44 2.787zm-.307-12.933q-1.493 0-2.507 1.093-1.013 1.08-1.253 3.04h7.227v-.187q-.107-1.88-1.014-2.906-.906-1.04-2.453-1.04zM45.533 31.387q0-1-.76-1.547-.746-.56-2.626-.96-1.867-.4-2.974-.96-1.093-.56-1.626-1.333-.52-.774-.52-1.84 0-1.774 1.493-3 1.507-1.227 3.84-1.227 2.453 0 3.973 1.267 1.534 1.266 1.534 3.24h-2.48q0-1.014-.867-1.747-.853-.733-2.16-.733-1.347 0-2.107.586-.76.587-.76 1.534 0 .893.707 1.346.707.454 2.547.867 1.853.413 3 .987 1.146.573 1.693 1.386.56.8.56 1.96 0 1.934-1.547 3.107-1.546 1.16-4.013 1.16-1.733 0-3.067-.613-1.333-.614-2.093-1.707-.747-1.107-.747-2.387H39q.067 1.24.987 1.974.933.72 2.453.72 1.4 0 2.24-.56.853-.574.853-1.52z"/>\n    </symbol>\n\n    <symbol id="fitView" viewBox="-13 -13 120 120">\n        <g stroke-width="4" stroke-linejoin="round" stroke="#222732">\n            <path fill="#6581d899" marker-mid="url(#fitArr)" d="M85 25v44L47 91 9 69V25L47 3l38 22v44" />\n            <path d="M47 47v44" />\n            <path fill="none" d="M85 25L47 47 9 25" />\n        </g>\n    </symbol>\n\n    <symbol id="toggleNodes" viewBox="-8 -8 110 110">\n        <g stroke-width="4" stroke-linejoin="round" stroke="#222732" marker-start="url(#node)" marker-end="url(#node)"\n            marker-mid="url(#node)">\n            <path fill="#6581d899" d="M47 3l38 22v44L47 91 9 69V25z" />\n            <path d="M47 47v44" />\n            <path fill="none" d="M85 25L47 47 9 25" />\n        </g>\n    </symbol>\n\n    <symbol id="toggleEdges" viewBox="0 0 94 94">\n        <g stroke="#fd7000" stroke-linejoin="round" stroke-width="4">\n            <path fill="#6581d899" d="M47 3l38 22v44L47 91 9 69V25z" />\n            <path fill="none" d="M85 25L47 47 9 25" />\n            <path d="M47 47v44" />\n        </g>\n    </symbol>\n\n    <symbol id="toggleBackground"  viewBox="0 0 100 100">\n        <g stroke="#222732" stroke-width="4" stroke-linejoin="round">\n            <path fill="#f7ffff" d="M2 68V2h66v66z"/>\n            <path fill="#222732" d="M32 98V32h66v66z"/>\n        </g>\n    </symbol>\n\n    <symbol id="backView" viewBox="0 0 94 94">\n        <g stroke-width="4" stroke-linejoin="round" stroke="#222732">\n            <path fill="#6581d899" d="M47 3l38 22v44L47 91 9 69V25z" />\n            <path fill="#1d3272" d="M47 3v44l38 22V25z" />\n            <path fill="none" d="M85 25L47 47 9 25" />\n            <path d="M47 47v44" />\n        </g>\n    </symbol>\n    <symbol id="bottomView" viewBox="0 0 94 94">\n        <g stroke-width="4" stroke-linejoin="round" stroke="#222732">\n            <path fill="#6581d899" d="M47 3l38 22v44L47 91 9 69V25z" />\n            <path fill="#1d3272" d="M85 69L47 91 9 69l38-22z" />\n            <path fill="none" d="M85 25L47 47 9 25" />\n            <path d="M47 47v44" />\n        </g>\n    </symbol>\n    <symbol id="frontView" viewBox="0 0 94 94">\n        <g stroke-width="4" stroke-linejoin="round" stroke="#222732">\n            <path fill="#6581d899" d="M47 3l38 22v44L47 91 9 69V25z" />\n            <path fill="#1d3272" d="M9 25l38 22v44L9 69z" />\n            <path d="M47 47l38-22" />\n        </g>\n    </symbol>\n    <symbol id="topView" viewBox="0 0 94 94">\n        <g stroke-width="4" stroke-linejoin="round" stroke="#222732">\n            <path fill="#6581d899" d="M47 3l38 22v44L47 91 9 69V25z" />\n            <path fill="#1d3272" d="M9 25l38 22 38-22L47 3z" />\n            <path d="M47 47v44" />\n        </g>\n    </symbol>\n    <symbol id="leftView" viewBox="0 0 94 94">\n        <g stroke-width="4" stroke-linejoin="round" stroke="#222732">\n            <path fill="#6581d899" d="M47 3l38 22v44L47 91 9 69V25z" />\n            <path fill="#1d3272" d="M9 69l38-22V3L9 25z" />\n            <path fill="none" d="M85 25L47 47 9 25" />\n            <path d="M47 47v44" />\n        </g>\n    </symbol>\n    <symbol id="rightView" viewBox="0 0 94 94">\n        <g stroke-width="4" stroke-linejoin="round" stroke="#222732">\n            <path fill="#6581d899" d="M47 3l38 22v44L47 91 9 69V25z" />\n            <path fill="#1d3272" d="M85 25L47 47v44l38-22z" />\n            <path d="M47 47L9 25" />\n        </g>\n    </symbol>\n    <symbol id="isoView" viewBox="0 0 94 94">\n        <g stroke-width="4" stroke-linejoin="round" stroke="#222732">\n            <path fill="#6581d899" d="M47 3l38 22v44L47 91 9 69V25z" />\n            <path fill="none" d="M85 25L47 47 9 25" />\n            <path d="M47 47v44" />\n        </g>\n    </symbol>\n    <symbol id="shadedRander" viewBox="0 0 94 94">\n        <g stroke-width="4" stroke-linejoin="round" stroke="#222732">\n            <path fill="#6581d899" d="M47 3l38 22v44L47 91 9 69V25z" />\n            <path fill="#4C61A2" d="M9 25l38 22v44L9 69z" />\n            <path fill="#3D4D82" d="M85 25L47 47v44l38-22z" />\n        </g>\n    </symbol>\n    <symbol id="transparentRander" viewBox="0 0 94 94">\n        <g stroke-width="4" stroke-linejoin="round" stroke="#222732">\n            <path fill="#6581d850" d="M47 3l38 22v44L47 91 9 69V25z" />\n            <path fill="none" d="M85 25L47 47 9 25" />\n            <path d="M47 47v44" />\n        </g>\n        <path fill="none" d="M85 69L47 47 9 69" stroke-width="4" stroke-linejoin="round" stroke="#22273250" />\n    </symbol>\n    <symbol id="wireframeRander" viewBox="0 0 94 94">\n        <g stroke-width="4" stroke-linejoin="round" stroke="#222732">\n            <path fill="none" d="M47 3l38 22v44L47 91 9 69V25z" />\n            <path fill="none" d="M85 25L47 47 9 25" />\n            <path d="M47 47v44" />\n        </g>\n    </symbol>\n    <symbol id="perspectiveView" viewBox="0 0 94 94">\n        <g stroke-width="4" stroke-linejoin="round" stroke="#222732">\n            <path fill="#6581d899" d="M47 91L14 58 5 14 47 3l42 11-9 44z" />\n            <path fill="none" d="M89 14L47 36 5 14" />\n            <path d="M47 36v55" />\n        </g>\n    </symbol>\n    <symbol id="shrinkElements" viewBox="0 0 94 94">\n        <path fill="#6581d899"\n            d="M12.8 31.6l30.4 17.6v35.2L12.8 66.8zM16.6 25L47 42.6 77.4 25 47 7.4zM81.2 31.6L50.8 49.2v35.2l30.4-17.6z" />\n    </symbol>\n    <symbol id="compass" viewBox="0 0 400 400">\n        <path fill="#3d4d82"\n            d="M127.87 400a5.15 5.15 0 0 1-5.08-6.03l7.11-41.23a5.15 5.15 0 1 1 10.16 1.75l-7.12 41.23a5.15 5.15 0 0 1-5.07 4.28z" />\n        <path fill="#222732"\n            d="M157.18 169.37l-37.22 184.38a14.94 14.94 0 1 0 29.29 5.91L184.6 184.6a61.93 61.93 0 0 1-1.17-.26 61.93 61.93 0 0 1-5.87-1.96 61.93 61.93 0 0 1-5.65-2.52 61.93 61.93 0 0 1-5.37-3.08 61.93 61.93 0 0 1-5.04-3.6 61.93 61.93 0 0 1-4.32-3.8z" />\n        <path fill="#3d4d82"\n            d="M272.13 400a5.15 5.15 0 0 1-5.07-4.28l-7.12-41.23a5.15 5.15 0 0 1 10.15-1.75l7.12 41.23a5.15 5.15 0 0 1-5.08 6.03z" />\n        <path fill="#222732"\n            d="M215.4 184.56l35.35 175.1a14.94 14.94 0 1 0 29.3-5.9L242.8 169.3a61.93 61.93 0 0 1-2.92 2.71 61.93 61.93 0 0 1-4.93 3.75 61.93 61.93 0 0 1-5.27 3.23 61.93 61.93 0 0 1-5.57 2.7 61.93 61.93 0 0 1-5.82 2.12 61.93 61.93 0 0 1-2.9.74z" />\n        <path fill="#3d4d82" d="M191.07 43.45h17.86v28.51h-17.86z" />\n        <path fill="#222732" d="M182.23 0h35.54v48.43h-35.54z" />\n        <path fill="#fd7000"\n            d="M200 62.73a61.93 61.93 0 0 0-61.93 61.93A61.93 61.93 0 0 0 200 186.58a61.93 61.93 0 0 0 61.93-61.92A61.93 61.93 0 0 0 200 62.73zm0 27.4a34.53 34.53 0 0 1 34.52 34.53A34.53 34.53 0 0 1 200 159.18a34.53 34.53 0 0 1-34.53-34.52A34.53 34.53 0 0 1 200 90.13z" />\n    </symbol>\n    <symbol id="crossSection" viewBox="0 0 100 100">\n        <path fill="#6581d899" stroke="#222732" stroke-linejoin="round" stroke-width="4" marker-end="url(#node)"\n            marker-mid="url(#node)" marker-start="url(#node)" d="M9 9h82v82H9z" />\n        <path stroke="#1d3272ff" stroke-width="6" marker-start="url(#arr1)" d="M75 50H25" />\n        <path fill="none" stroke="#c61d1dff" stroke-width="6" marker-start="url(#arr2)"\n            d="M40 30a20 20 0 0 1 20 20 20 20 0 0 1-20 20" />\n    </symbol>\n    <symbol id="deform" viewBox="0 0 100 100">\n        <path fill="#6581d899" stroke="#222732" stroke-linejoin="round" stroke-width="4" marker-end="url(#node)"\n            marker-mid="url(#node)" marker-start="url(#node)"\n            d="M9 9c31 11 51 11 82 0-11 31-11 51 0 82-31-11-51-11-82 0C20 60 20 40 9 9z" />\n    </symbol>\n    <symbol id="fringe" viewBox="0 0 100 100">\n        <path fill="url(#fringeGrad)" stroke="#222732" stroke-linejoin="round" stroke-width="4" marker-end="url(#node)"\n            marker-mid="url(#node)" marker-start="url(#node)" d="M9 9h82v82H9z" />\n    </symbol>\n    <symbol id="labelIds" viewBox="0 0 100 100">\n        <path fill="#6581d899" stroke="#222732" stroke-linejoin="round" stroke-width="4" marker-end="url(#node)"\n            marker-mid="url(#node)" marker-start="url(#node)" d="M9 9h82v82H9z" />\n        <g fill="#222732">\n            <path\n                d="M28.98 18.15H39.8v26.9h-5.88V23.1h-5.25v-4.95zM67.31 29.29c.62-.93.93-1.86.93-2.79 0-.93-.3-1.54-.93-2.16a2.8 2.8 0 0 0-2.16-.93c-1.55 0-3.4 1.24-4.95 3.71l-4.94-2.78A18.41 18.41 0 0 1 59.27 20a11 11 0 0 1 5.88-1.55c2.47 0 4.33.62 6.18 2.17 1.86 1.54 2.79 3.4 2.79 6.18 0 1.24-.31 2.78-.93 4.02-.62 1.24-2.17 2.78-4.02 4.95l-4.95 4.94h10.51v5.26H55.56v-4.33l8.04-8.04c1.86-2.16 3.1-3.4 3.71-4.32zM26.5 59.9v-5.26H42.9v4.02l-5.57 6.18a7.29 7.29 0 0 1 4.95 2.78 7.58 7.58 0 0 1 1.86 4.95 9.1 9.1 0 0 1-2.79 6.8 11.28 11.28 0 0 1-7.42 2.48c-3.09 0-5.87-.93-8.96-3.1l2.47-4.63c2.47 1.85 4.95 2.78 6.8 2.78 1.24 0 2.17-.31 3.1-.93a2.81 2.81 0 0 0 1.23-2.47c0-1.24-.3-1.86-1.24-2.78a6.6 6.6 0 0 0-3.7-.93c-.93 0-2.17.3-3.72.62v-4.33l5.26-6.19zM66.08 70.4v-4.94h5.87v4.64h3.1v5.25h-3.1v6.5h-5.87v-6.5H55.26v-4.64l9.58-16.07h6.8L62.37 70.1h3.7z" />\n        </g>\n    </symbol>\n    <symbol id="properties" viewBox="0 0 100 100">\n        <path fill="#6581d899" stroke="#222732" stroke-linejoin="round" stroke-width="4" marker-end="url(#node)"\n            marker-mid="url(#node)" marker-start="url(#node)" d="M9 9h82v82H9z" />\n        <path fill="#fd7000"\n            d="M62.83 25a12.18 12.18 0 0 0-11.77 15.33L26.53 64.86a5.23 5.23 0 0 0 0 7.39l.61.6 22.38-22.37-22.38 22.38.61.61a5.23 5.23 0 0 0 7.39 0l24.53-24.53A12.18 12.18 0 0 0 74.29 33.1l-6.56 6.55-5.53-1.84-1.84-5.53 6.55-6.56c-1.33-.48-2.71-.71-4.08-.71z" />\n    </symbol>\n    <symbol id="help" viewBox="0 0 58 58">\n        <path fill="#fd7000"\n            d="M29 0a29 29 0 1 0 0 58 29 29 0 0 0 0-58zm0 13.52a3.64 3.64 0 1 1 0 7.29 3.64 3.64 0 0 1 0-7.29zm6.37 30.96H22.63V39h2.73V28.1h-2.73v-5.46h10.01V39h2.73v5.47z" />\n        <path fill="#fd7000" d="M53.62 44.3l-9.31 9.32 12.72 3.41z" />\n    </symbol>\n    <symbol id="settings" viewBox="0 0 58 58">\n        <path fill="#1d3272"\n            d="M32.7 25.23l-2.66 2.66-1.06 1.05L27.93 30l-2.66 2.66 9.55 9.54a4.5 4.5 0 0 0 6.36 0l.53-.53.53-.53a4.5 4.5 0 0 0 0-6.36z" />\n        <path fill="#6581d8"\n            d="M2.46.3L1.41 1.38.35 2.42 3 8.26l3.5.32 10.29 10.28 1.06-1.05 1.05-1.06L8.62 6.45l-.32-3.5zM26.33 24.17l-1.06 1.06-1.06 1.06L27.93 30l1.05-1.06 1.06-1.05z" />\n        <path fill="#fd7000"\n            d="M32.61-.03a10.5 10.5 0 0 0-10.14 13.22L1.32 34.34a4.5 4.5 0 0 0 0 6.36l.52.53 19.3-19.3-19.3 19.3.53.53a4.5 4.5 0 0 0 6.37 0L29.9 20.61A10.5 10.5 0 0 0 42.5 6.95l-5.65 5.64L32.07 11l-1.59-4.77L36.13.58c-1.15-.41-2.34-.61-3.52-.61z" />\n    </symbol>\n    <symbol id="toggleTree" viewBox="0 0 58 58">\n        <path fill="#fd7000"\n            d="M22.41 20.66H2.73a.69.69 0 0 1-.66-.86L6.54 7.54c.08-.3.35-.5.66-.5h19.68c.45 0 .66.43.66.86l-4.47 12.25c-.08.3-.35.51-.66.51z" />\n        <path fill="#ff9c4d"\n            d="M24.14 3.08h-11.1L10.84 0H2.8a.76.76 0 0 0-.77.76v18.79h.1l4.4-12c.08-.3.35-.52.66-.52h17.7v-3.2a.76.76 0 0 0-.76-.75z" />\n        <rect width="22.83" height="17.59" x="30.81" y="17.63" fill="#fd7000" ry=".7" />\n        <path fill="#ff9c4d" d="M31.57 14.55a.76.76 0 0 0-.76.76v3.02a.7.7 0 0 1 .7-.7H52.9h-11.1l-2.2-3.08z" />\n        <rect width="22.83" height="17.59" x="30.81" y="40.41" fill="#fd7000" ry=".7" />\n        <path fill="#ff9c4d" d="M31.57 37.34a.76.76 0 0 0-.76.76v3.01a.7.7 0 0 1 .7-.7H52.9h-11.1l-2.2-3.07z" />\n        <path stroke="#646464" stroke-width="1.81" d="M12.01 20.66v28.32M30.81 48.98h-19.7M30.81 27.44h-19.7" />\n    </symbol>\n    <symbol id="measure" viewBox="0 0 512 512">\n        <path fill="#fd7000" d="M24.34 395.68L395.68 24.34l91.98 91.98-371.34 371.34z" />\n        <path fill="#222732"\n            d="M509.05 109.19L402.8 2.95a10.09 10.09 0 0 0-14.25 0l-70.11 70.11-70.11 70.1v.01L38 353.5 2.95 388.56a10.09 10.09 0 0 0 0 14.25L109.2 509.05a10.05 10.05 0 0 0 14.26 0l385.6-385.6a10.08 10.08 0 0 0 0-14.26zM116.32 487.66l-91.98-91.98 20.8-20.8 17.65 17.67a10.05 10.05 0 0 0 14.26 0 10.08 10.08 0 0 0 0-14.26l-17.66-17.66 20.8-20.8 32.21 32.21a10.05 10.05 0 0 0 14.26 0 10.08 10.08 0 0 0 0-14.25l-32.21-32.22 20.8-20.8 17.66 17.67a10.05 10.05 0 0 0 14.25 0 10.08 10.08 0 0 0 0-14.26l-17.66-17.66 20.8-20.8 32.21 32.22a10.05 10.05 0 0 0 14.26 0 10.08 10.08 0 0 0 0-14.26l-32.22-32.21 20.8-20.8L203 252.32a10.05 10.05 0 0 0 14.25 0 10.08 10.08 0 0 0 0-14.26l-17.66-17.65 20.8-20.8 32.22 32.22a10.05 10.05 0 0 0 14.26 0 10.08 10.08 0 0 0 0-14.26l-32.22-32.22 20.8-20.8 17.66 17.67a10.05 10.05 0 0 0 14.25 0 10.08 10.08 0 0 0 0-14.26l-17.65-17.66 20.8-20.8 32.21 32.22a10.05 10.05 0 0 0 14.26 0 10.08 10.08 0 0 0 0-14.25l-32.22-32.22 20.8-20.8 17.65 17.65a10.05 10.05 0 0 0 14.26 0 10.08 10.08 0 0 0 0-14.25l-17.66-17.66 20.8-20.8 32.22 32.22a10.05 10.05 0 0 0 14.26 0 10.08 10.08 0 0 0 0-14.26l-32.21-32.22 20.8-20.8 91.97 91.99z" />\n    </symbol>\n    <symbol id="showHide" viewBox="0 0 96 96">\n        <g stroke="#222732">\n            <path fill="#6581d8"\n                d="M95.3 48.17L83.15 60.3a49.48 49.48 0 0 1-69.98 0L.7 47.83 12.84 35.7a49.48 49.48 0 0 1 69.98 0z" />\n            <path fill="#3d4d82"\n                d="M62.23 33.77A20.13 20.13 0 0 0 48 27.87 20.13 20.13 0 0 0 27.86 48a20.13 20.13 0 0 0 5.91 14.23z" />\n            <path stroke-width="4" d="M9 87L87 9" />\n        </g>\n    </symbol>\n    <symbol id="checked" viewBox="0 0 426.67 426.67">\n        <path fill="#ddd"\n            d="M153.5 366.84c-8.65 0-17.32-3.3-23.92-9.91L9.9 237.26a33.84 33.84 0 1 1 47.87-47.86l95.72 95.73L368.9 69.74a33.84 33.84 0 1 1 47.85 47.87L177.44 356.93a33.75 33.75 0 0 1-23.94 9.9z" />\n    </symbol>\n    <symbol id="close" viewBox="0 0 12 16">\n        <path fill="#eee"\n            d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48L7.48 8z" />\n    </symbol>\n    <symbol id="eye" viewBox="0 0 561 561">\n        <path fill="#ddd"\n            d="M280.5 89.25C153 89.25 43.35 168.3 0 280.5c43.35 112.2 153 191.25 280.5 191.25S517.65 392.7 561 280.5C517.65 168.3 408 89.25 280.5 89.25zm0 318.75C209.1 408 153 351.9 153 280.5S209.1 153 280.5 153 408 209.1 408 280.5 351.9 408 280.5 408zm0-204c-43.35 0-76.5 33.15-76.5 76.5s33.15 76.5 76.5 76.5 76.5-33.15 76.5-76.5-33.15-76.5-76.5-76.5z" />\n    </symbol>\n    <symbol id="hide" viewBox="0 0 12 12">\n        <path fill="#ddd" d="M0 5h12v2H0z" />\n    </symbol>\n    <symbol id="search" viewBox="0 0 250.31 250.31">\n        <path fill="#646464"\n            d="M244.19 214.6l-54.38-54.37c-.3-.3-.63-.5-.93-.76a102.4 102.4 0 0 0 16.94-56.56C205.82 46.08 159.75 0 102.92 0S0 46.08 0 102.91c0 56.84 46.07 102.91 102.91 102.91 20.9 0 40.32-6.24 56.55-16.94.27.3.47.64.76.93l54.38 54.38a20.92 20.92 0 0 0 29.59-29.59zM102.9 170.15a67.24 67.24 0 1 1 0-134.47 67.24 67.24 0 0 1 0 134.47z" />\n    </symbol>\n    <symbol id="logo" viewBox="0 0 400 346.41">\n        <path d="M100 0 l-50 86.6025 h100 Z" fill="#c61d1d" />\n        <path d="M100 0 h100 l-50 86.6025 Z" fill="#c61d1d" />\n        <path d="M200 0 l-50 86.6025 h100 Z" fill="#c61d1d" />\n        <path d="M200 0 h100 l-50 86.6025 Z" fill="#c61d1d" />\n        <path d="M300 0 l-50 86.6025 h100 Z" fill="#1d3272" />\n        <path d="M50 86.6025 l-50 86.6025 h100 Z" fill="#c61d1d" />\n        <path d="M50 86.6025 h100 l-50 86.6025 Z" fill="#c61d1d" />\n        <path d="M150 86.6025 l-50 86.6025 h100 Z" fill="#c61d1d" />\n        <path d="M150 86.6025 h100 l-50 86.6025 Z" fill="#c61d1d" />\n        <path d="M250 86.6025 l-50 86.6025 h100 Z" fill="#1d3272" />\n        <path d="M250 86.6025 h100 l-50 86.6025 Z" fill="#1d3272" />\n        <path d="M350 86.6025 l-50 86.6025 h100 Z" fill="#1d3272" />\n        <path d="M0 173.205 h100 l-50 86.6025 Z" fill="#4c9a2a" />\n        <path d="M100 173.205 l-50 86.6025 h100 Z" fill="#4c9a2a" />\n        <path d="M100 173.205 h100 l-50 86.6025 Z" fill="#4c9a2a" />\n        <path d="M200 173.205 l-50 86.6025 h100 Z" fill="#4c9a2a" />\n        <path d="M200 173.205 h100 l-50 86.6025 Z" fill="#1d3272" />\n        <path d="M300 173.205 l-50 86.6025 h100 Z" fill="#1d3272" />\n        <path d="M300 173.205 h100 l-50 86.6025 Z" fill="#1d3272" />\n        <path d="M50 259.8075 h100 l-50 86.6025 Z" fill="#4c9a2a" />\n        <path d="M150 259.8075 l-50 86.6025 h100 Z" fill="#4c9a2a" />\n        <path d="M150 259.8075 h100 l-50 86.6025 Z" fill="#4c9a2a" />\n        <path d="M250 259.8075 l-50 86.6025 h100 Z" fill="#4c9a2a" />\n        <path d="M250 259.8075 h100 l-50 86.6025 Z" fill="#1d3272" />\n    </symbol>\n</svg>\n';
var canvas=null;var textCanvas=null;var gl=null;var ctx=null;var csel=null;var camera=null;var render=null;var model=null;var cidAxis=null;var bdfData=null;var hover=null;var selection=null;var measure=null;var loader=null;var animationID=null;window.onload=function(){canvas=document.getElementById('glCanvas3D');textCanvas=document.getElementById('textCanvas');selectCanvas=document.getElementById('selectCanvas');try{gl=canvas.getContext('webgl2');ctx=textCanvas.getContext('2d');csel=selectCanvas.getContext('2d');}catch(e){alert('Could not initialise WebGL, sorry :-(\n'+e);return;}
if(!gl){alert('Could not initialise WebGL, sorry :-(');return;}
camera=new $glCamera();render=new $glRender();cidAxis=new $cidAxis();hover=new $glHover();selection=new $glSelection();measure=new $glMeasurements();initListeners();reportWindowSize();render.drawScene();loader=document.getElementById('loader').style;loader.backgroundColor='transparent';loader.opacity=1;loaderFade();};function loaderFade(){if((loader.opacity-=0.25)<0)
loader.display="none";else
setTimeout(loaderFade,0);}
function loaderShow(){loader.opacity=1;loader.display='flex';}
Number.prototype.between=function(a,b){return this>=a&&this<=b;};Float32Array.prototype.append=function(arr,start){for(let i=0;i<arr.length;i++){this[start+i]=arr[i];}};Float32Array.prototype.appendNTimes=function(arr,n,start){let len=arr.length;for(let i=0;i<n;i++){let off=i*len;for(let j=0;j<len;j++){this[start+off+j]=arr[j];}}};Float32Array.prototype.concat=function(...arrays){let totalLength=this.length;for(const arr of arrays){totalLength+=arr.length;}
let result=new Float32Array(totalLength),offset=this.length;result.set(this,0);for(const arr of arrays){result.set(arr,offset);offset+=arr.length;}
return result;};Float32Array.prototype.addElmCords=function(elm,start){let off;if(elm.nodeCount==4){off=[elm.con[0].glID*3,elm.con[1].glID*3,elm.con[2].glID*3,elm.con[0].glID*3,elm.con[2].glID*3,elm.con[3].glID*3];for(let i=0;i<6;i++){this[start]=glNodes.coords[off[i]];this[start+1]=glNodes.coords[off[i]+1];this[start+2]=glNodes.coords[off[i]+2];start+=3;}}else{for(let i=0;i<elm.nodeCount;i++){off=elm.con[i].glID*3;this[start]=glNodes.coords[off];this[start+1]=glNodes.coords[off+1];this[start+2]=glNodes.coords[off+2];start+=3;}}};Float32Array.prototype.addBarCentroid=function(elm,start){const off1=elm.con[0].glID*3,off2=elm.con[1].glID*3;this[start]=(glNodes.coords[off1]+glNodes.coords[off2])*0.5;this[start+1]=(glNodes.coords[off1+1]+glNodes.coords[off2+1])*0.5;this[start+2]=(glNodes.coords[off1+2]+glNodes.coords[off2+2])*0.5;};Float32Array.prototype.addElmNormals=function(elm,start){const norm=glVec3.getNormal(elm.con[0].coords,elm.con[1].coords,elm.con[2].coords).xyz;if(elm.nodeCount==4){const norm1=glVec3.getNormal(elm.con[0].coords,elm.con[2].coords,elm.con[3].coords).xyz,avg=glVec3.add(norm,norm1).normalize().xyz;this[start]=avg[0];this[start+1]=avg[1];this[start+2]=avg[2];this[start+3]=norm[0];this[start+4]=norm[1];this[start+5]=norm[2];this[start+6]=avg[0];this[start+7]=avg[1];this[start+8]=avg[2];this[start+9]=avg[0];this[start+10]=avg[1];this[start+11]=avg[2];this[start+12]=avg[0];this[start+13]=avg[1];this[start+14]=avg[2];this[start+15]=norm1[0];this[start+16]=norm1[1];this[start+17]=norm1[2];}else{this[start]=norm[0];this[start+1]=norm[1];this[start+2]=norm[2];this[start+3]=norm[0];this[start+4]=norm[1];this[start+5]=norm[2];this[start+6]=norm[0];this[start+7]=norm[1];this[start+8]=norm[2];}};Object.prototype.addSvgImage=function(svgID){let svg=document.createElementNS('http://www.w3.org/2000/svg','svg');this.appendChild(svg);let use=document.createElementNS('http://www.w3.org/2000/svg','use');use.setAttribute('href','#'+svgID);svg.appendChild(use);};class $ribbonControl{constructor(){this.wrapper=document.createElement('div');this.wrapper.classList.add('ribbonControl');document.getElementById('ribbon').appendChild(this.wrapper);this.tabsBar=document.createElement('div');this.tabsBar.classList.add('ribbonTabHeader');this.wrapper.appendChild(this.tabsBar);this.tabs=[];this.height=null;}
initTabs(){this.initAboutTab();this.initMainTab();this.initFemTab();this.initResultsTab();this.height=document.getElementById('ribbon').clientHeight;}
initAboutTab(){let aboutTab=new $ribbonTab('Fem4Web','aboutTab');aboutTab.tabBtn.onclick=function(e){e.stopPropagation();const aboutModal=new $aboutModal();};}
initMainTab(){let mainTab=new $ribbonTab('Main'),btn;mainTab.tabBtn.click();mainTab.addGroup('File');btn=mainTab.addBtn('Open','openFile',false);btn.onclick=function(e){e.stopPropagation();const openModal=new $openModal();};btn=mainTab.addDropDown('Import','import',false,false);mainTab.addDropDownItem(btn,'Groups .ses','import_ses');mainTab.addDropDownItem(btn,'Model .bdf','import_bdf');mainTab.addDropDownItem(btn,'Results .csv','import_csv');btn.addEventListener('onRibbonDropdownChange',function(e){switch(e.detail.text){case'Groups .ses':const input=document.getElementById('importFiles');input.setAttribute('accept','.ses');input.onchange=function(){let importGroups=new $importGroups(this.files);};input.click();break;case'Model .bdf':let modalImportBdf=new $modalImportBdf();break;}},false);let input=document.createElement('input');input.style.display='none';input.id='importFiles';input.type='file';btn.appendChild(input);mainTab.addSplitter();mainTab.addGroup('View');btn=mainTab.addBtn('Fit','fitView',false);btn.addEventListener('click',function(){camera.fitZoom();},false);btn=mainTab.addDropDown('View','isoView',false,false);mainTab.addDropDownItem(btn,'Top','topView');mainTab.addDropDownItem(btn,'Bottom','bottomView');mainTab.addDropDownItem(btn,'Front','frontView');mainTab.addDropDownItem(btn,'Back','backView');mainTab.addDropDownItem(btn,'Left','leftView');mainTab.addDropDownItem(btn,'Right','rightView');mainTab.addDropDownItem(btn,'ISO','isoView');btn.addEventListener('onRibbonDropdownChange',function(e){camera.setViewTo(e.detail.text);},false);btn=mainTab.addDropDown('Shaded','shadedRander',false,true);mainTab.addDropDownItem(btn,'Shaded','shadedRander');mainTab.addDropDownItem(btn,'Flat','isoView');mainTab.addDropDownItem(btn,'Transparent','transparentRander');mainTab.addDropDownItem(btn,'Wireframe','wireframeRander');btn.addEventListener('onRibbonDropdownChange',function(e){render.setRenderStyle(e.detail.text);},false);btn=mainTab.addBtn('Toggle Nodes','toggleNodes',true);btn.addEventListener('click',function(){render.toggleNodeShow();});btn=mainTab.addBtn('Toggle Edges','toggleEdges',true,true);btn.addEventListener('click',function(){render.toggleEdgeShow();});btn=mainTab.addBtn('Toggle Background','toggleBackground',true);btn.addEventListener('click',function(){render.toggleBackground();});btn=mainTab.addBtn('Shrink elements','shrinkElements',true,true);btn.addEventListener('click',function(){render.toggleElmShrink();});mainTab.addSplitter();mainTab.addGroup('Settings');btn=mainTab.addBtn('Settings','settings',false);btn.addEventListener('click',function(){});btn=mainTab.addBtn('Help','help',false);btn.addEventListener('click',function(){CloseSidebar();openInNewTab('');});mainTab.addSplitter();}
initFemTab(){let femTab=new $ribbonTab('FEM'),btn;femTab.addGroup('Display');btn=femTab.addBtn('Label IDs','labelIds',false);btn.addEventListener('click',function(){sideBar.addFunction('/static/libs/FEM_Functions/showElmIds.js','showElmIds');});btn=femTab.addBtn('Show/Hide','showHide',false);btn.addEventListener('click',function(){sideBar.addFunction('/static/libs/FEM_Functions/showHideFem.js','showHideFem');});btn=femTab.addBtn('Properties','properties',false);btn.addEventListener('click',function(){sideBar.addFunction('/static/libs/FEM_Functions/showElmProp.js','showElmProp');});femTab.addSplitter();femTab.addGroup('Measurements');btn=femTab.addBtn('Distance','measure',false);btn.addEventListener('click',function(){sideBar.addFunction('/static/libs/FEM_Functions/measureDist.js','measureDist');});btn=femTab.addBtn('Diameter','compass',false);btn.addEventListener('click',function(){sideBar.addFunction('/static/libs/FEM_Functions/measureRadius.js','measureRadius');});femTab.addSplitter();}
initResultsTab(){let resultsTab=new $ribbonTab('Results'),btn;resultsTab.addGroup('Result Plots');btn=resultsTab.addBtn('Deformation','deform',false);btn.addEventListener('click',function(){sideBar.addFunction('/static/libs/FEM_Functions/resultsDispl.js','resultsDispl');});btn=resultsTab.addBtn('Fringe','fringe',false);btn.addEventListener('click',function(){sideBar.addFunction('/static/libs/FEM_Functions/resultsFringe.js','resultsFringe');});btn=resultsTab.addBtn('Cross Section','crossSection',false);btn.addEventListener('click',function(){sideBar.addFunction('/static/libs/FEM_Functions/resultsCrossSection.js','resultsCrossSection');});resultsTab.addSplitter();}
closeAllDropDown(){let ddElms=document.getElementsByClassName('ribbonDrpdnCont');for(const ddElm of ddElms){if(ddElm.getAttribute('show')=='true'){ddElm.setAttribute('show','false');ddElm.previousSibling.classList.remove('arrow');}}}}
class $ribbonTab{constructor(name,id=false){this.tabBtn=document.createElement('button');this.tabBtn.classList.add('ribbonTab');if(id){this.tabBtn.addSvgImage('logo');this.tabBtn.insertAdjacentHTML('beforeend',name);this.tabBtn.id=id;}else{this.tabBtn.innerHTML=name;this.tabBtn.addEventListener('click',this.onTabChange,false);this.table=document.createElement('table');this.table.classList.add('ribbonTabContent');this.table.style.display='none';let tbody=document.createElement('tbody');this.table.appendChild(tbody);this.tr1=document.createElement('tr');this.tr2=document.createElement('tr');this.footTr=document.createElement('tr');tbody.appendChild(this.tr1);tbody.appendChild(this.tr2);tbody.appendChild(this.footTr);ribbon.tabs.push(this);ribbon.wrapper.appendChild(this.table);}
ribbon.tabsBar.appendChild(this.tabBtn);}
addGroup(name){this.footTd=document.createElement('td');this.footTd.classList.add('ribbonTabGroupFooter');this.footTd.innerHTML=name;this.count=0;this.footTr.appendChild(this.footTd);}
addSplitter(){let td=document.createElement('td');td.classList.add('ribbonTabSplitter');this.tr1.appendChild(td);td.rowSpan=3;}
addBtn(text,icon,isSmall,is2ndRow=false){let btn=document.createElement('button');btn.classList.add('ribbonButton');btn.addSvgImage(icon);btn.insertAdjacentHTML('beforeend',text);if(isSmall==false)
btn.setAttribute('size','large');this.addItem(btn,isSmall,is2ndRow);return btn;}
addDropDown(text,icon,isSmall,isSelectable,is2ndRow=false){let wrap=document.createElement('div'),btn=document.createElement('button'),dropDown=document.createElement('div');btn.classList.add('ribbonDropdownBtn');btn.addSvgImage(icon);btn.insertAdjacentHTML('beforeend',text);if(!isSmall)
btn.setAttribute('size','large');if(!isSelectable)
btn.setAttribute('changeicon','no');wrap.classList.add('ribbonDropdown');wrap.appendChild(btn);dropDown.classList.add('ribbonDrpdnCont');dropDown.setAttribute('show',false);wrap.appendChild(dropDown);btn.addEventListener('click',this.onDropDownClick,false);this.addItem(wrap,isSmall,is2ndRow);return btn;}
addDropDownItem(dropDown,text,icon){let btn=document.createElement('button');btn.classList.add('ribbonButton');btn.addSvgImage(icon);btn.insertAdjacentHTML('beforeend',text);dropDown.nextSibling.appendChild(btn);btn.addEventListener('click',this.onDropDownOptionClick,false);}
addItem(item,isSmall,is2ndRow){let td=document.createElement('td');td.appendChild(item);if(isSmall&&is2ndRow){this.tr2.appendChild(td);}else{this.tr1.appendChild(td);if(!isSmall){td.rowSpan=2;}
this.count++;this.footTd.colSpan=this.count;}}
onTabChange(e){e.stopPropagation();for(const tab of ribbon.tabs){if(tab.tabBtn!==this){tab.table.style.display='none';tab.tabBtn.classList.remove('active');}else{tab.table.style.display='block';tab.tabBtn.classList.add('active');}}}
onDropDownClick(e){e.stopPropagation();let isShown=this.nextSibling.getAttribute('show');ribbon.closeAllDropDown();if(isShown=='false'){this.nextSibling.setAttribute('show','true');this.classList.toggle('arrow');}
document.addEventListener('click',ribbon.closeAllDropDown,{once:true});}
onDropDownOptionClick(e){if(this.parentElement.previousSibling.getAttribute('changeicon')!=='no'){this.parentElement.previousSibling.innerHTML=this.innerHTML;}
let event=new CustomEvent('onRibbonDropdownChange',{detail:{text:this.innerHTML,},bubbles:true,cancelable:true});this.parentElement.previousSibling.dispatchEvent(event);this.parentElement.parentElement.setAttribute('show','false');this.parentElement.previousSibling.classList.remove('arrow');}}
const ribbon=new $ribbonControl();ribbon.initTabs();guiGroupsDict={};class guiGroup{constructor(name){this.div=document.createElement('div');this.div.classList.add('treeTableRow');this.div.rowIndex=tree.count;let td=document.createElement('div');td.classList.add('treeTableCell','col1');td.innerHTML=name;this.div.appendChild(td);td=document.createElement('div');td.classList.add('treeTableCell','checkBox','checked');this.div.appendChild(td);td.addEventListener("click",function(e){e.stopPropagation();tree.toggleGroupVisibility(this);});this.div.addEventListener("click",function(e){e.stopPropagation();let trs=tree.table.getElementsByClassName('treeTableRow');if(KeyboardState.Ctrl){this.classList.toggle('selected');tree.toggleGroupSelect(this);tree.firstSelectedRow=this.rowIndex;tree.lastSelectedRow=-1;}
if(!KeyboardState.Ctrl&&!KeyboardState.Shift){for(let i=0;i<trs.length;i++){if(trs[i].classList.contains('selected')&&trs[i]!==this){trs[i].classList.remove('selected');tree.toggleGroupSelect(trs[i],true);}}
this.classList.toggle('selected');tree.toggleGroupSelect(this,true);tree.firstSelectedRow=this.rowIndex;tree.lastSelectedRow=-1;model.updateStages();}
if(KeyboardState.Shift){if(tree.lastSelectedRow>-1){for(let i=Math.min(this.rowIndex,tree.lastSelectedRow);i<=Math.max(this.rowIndex,tree.lastSelectedRow);i++){if(trs[i].classList.contains('selected')){trs[i].classList.remove('selected');tree.toggleGroupSelect(trs[i],true);}}}
tree.lastSelectedRow=this.rowIndex;for(let i=Math.min(tree.firstSelectedRow,tree.lastSelectedRow);i<=Math.max(tree.firstSelectedRow,tree.lastSelectedRow);i++){if(!trs[i].classList.contains('selected')){trs[i].classList.add('selected');tree.toggleGroupSelect(trs[i],true);}}
model.updateStages();}
if(!tree.documentClickAdded){tree.documentClickAdded=true;selectCanvas.addEventListener('click',function(e){if(tree.documentClickAdded&&e.button==0){tree.documentClickAdded=false;tree.removeAllSelect();}},{once:true});}},false);}
expand(newNode){}
collapse(newNode){}}
class treeControl{constructor(){this.MAX_HEIGHT=650;this.module=document.getElementById('treeView');this.showBtn=document.createElement('button');this.hideBtn=document.createElement('button');this.showBtn.id='showTree';this.showBtn.style.display='none';this.showBtn.addSvgImage('toggleTree');this.hideBtn.classList.add('hideBtn');this.hideBtn.setAttribute('aria-label','Hide');this.hideBtn.addSvgImage('hide');this.hideBtn.onclick=this.showBtn.onclick=function(){tree.container.style.display=tree.container.style.display==='none'?'':'none';tree.showBtn.style.display=tree.showBtn.style.display==='none'?'':'none';tree.hideBtn.style.display=tree.hideBtn.style.display==='none'?'':'none';tree.module.classList.toggle('hidden');tree.module.classList.toggle('resizable');};this.module.appendChild(this.showBtn);this.module.appendChild(this.hideBtn);this.container=document.createElement('div');this.container.id='treeContent';this.module.appendChild(this.container);let div=document.createElement('div');div.id='treeFilter';this.filter=document.createElement('input');this.filter.type='text';this.filter.setAttribute('aria-label','Filter');this.filter.placeholder='Groups filter..';this.container.appendChild(div);div.appendChild(this.filter);div.addSvgImage('search');this.head=document.createElement('div');this.head.classList.add('treeTableHead');this.container.appendChild(this.head);div=document.createElement('div');div.classList.add('treeTableCell','col1');div.innerHTML='Name';this.head.appendChild(div);div=document.createElement('div');div.classList.add('treeTableCell','col2');div.id='treeH2';div.addSvgImage('eye');this.head.appendChild(div);div.onclick=function(e){e.stopPropagation();tree.toggleAllGroupsVisibility();};this.table=document.createElement('div');this.table.classList.add('treeTable');this.container.appendChild(this.table);this.count=0;this.maxHeight=null;this.firstSelectedRow=null;this.lastSelectedRow=null;this.documentClickAdded=false;this.module.addEventListener("mouseenter",function(e){this.classList.add("hovered");},false);this.module.addEventListener("mouseleave",function(e){this.classList.remove("hovered");},false);this.filter.onkeyup=function(){let trs=tree.table.getElementsByClassName('treeTableRow'),filter=tree.filter.value.toUpperCase(),txtValue,td,count;for(let i=0;i<trs.length;i++){td=trs[i].firstChild;if(td){txtValue=td.innerText;if(txtValue.toUpperCase().indexOf(filter)>-1){trs[i].style.display="flex";count++;}else{trs[i].style.display="none";}}}
tree.module.style.maxHeight=Math.min(tree.maxHeight,tree.MAX_HEIGHT)+'px';};}
addGroup(newGroup){guiGroupsDict[newGroup.name]=newGroup;this.count++;this.maxHeight=(this.count+1)*(this.head.offsetHeight-1)+this.filter.offsetHeight+6;this.table.appendChild(newGroup.div);this.module.style.maxHeight=Math.min(this.maxHeight,this.MAX_HEIGHT)+'px';if(this.container.offsetHeight>tree.MAX_HEIGHT){this.module.style.height=this.MAX_HEIGHT+'px';}}
removeAllSelect(){let trs=this.table.getElementsByClassName('treeTableRow');for(let i=0;i<trs.length;i++){if(trs[i].classList.contains('selected')){trs[i].classList.remove("selected");this.toggleGroupSelect(trs[i],true);}}
model.updateStages();}
toggleGroupSelect(tr){let selected=tr.classList.contains('selected');let name=tr.firstChild.innerHTML;let tmpGroup=fmGroupsDict[name];tmpGroup.toggleSelection(selected);}
toggleGroupVisibility(td){td.classList.toggle('checked');let selected=td.parentElement.classList.contains('selected');let visibility=td.classList.contains('checked');let name=td.previousSibling.innerHTML;let tmpGroup=fmGroupsDict[name];tmpGroup.toggleVisibility(visibility,selected);}
toggleAllGroupsVisibility(){let trs=this.table.getElementsByClassName('treeTableRow'),td,v,visibility;for(let i=0;i<trs.length;i++){td=trs[i].lastChild;v=td.classList.contains('checked');if(i==0){visibility=v;this.toggleGroupVisibility(td,true);}else if(v==visibility){this.toggleGroupVisibility(td,true);}}
model.updateStages();model.updateSelectStages();}
toggleSelectedGroupsVisibility(){let trs=this.table.getElementsByClassName('treeTableRow'),td,v,visibility;for(let i=0;i<trs.length;i++){td=trs[i].lastChild;v=td.classList.contains('checked');if(i==0){visibility=v;this.toggleGroupVisibility(td,true);}else if(v==visibility){this.toggleGroupVisibility(td,true);}}
model.updateStages();model.updateSelectStages();}}
const tree=new treeControl();document.onkeydown=function(e){if(e.keyCode==32){tree.toggleSelectedGroupsVisibility();}
if(tree.documentClickAdded&&e.keyCode==27){tree.documentClickAdded=false;tree.removeAllSelect();}};class $sideBar{constructor(){this.wrapper=document.getElementById('sideBar');this.closeBtn=document.createElement('button');this.closeBtn.classList.add('closeBtn');this.closeBtn.addSvgImage('close');this.wrapper.appendChild(this.closeBtn);this.closeBtn.onclick=this.closeBtnClick;this.mouseInitX=null;this.dragWidth=document.createElement('div');this.dragWidth.classList.add('dragWidthLeft');this.dragWidth.addEventListener('mousedown',this.dragWidthClick);this.wrapper.appendChild(this.dragWidth);this.table=document.createElement('div');this.table.classList.add('sideBarContent');this.table.id='sideBarContent';this.wrapper.appendChild(this.table);this.btnContainer=document.createElement('div');this.btnContainer.id='sideBarBtnContent';this.wrapper.appendChild(this.btnContainer);this.inputCount=0;this.currentFunction=null;this.focusElement=null;this.timeout=null;}
closeBtnClick(e){sideBar.wrapper.style.display='none';}
dragWidthClick(e){sideBar.mouseInitX=e.clientX;window.addEventListener('mousemove',sideBar.dragWidthMove);window.addEventListener('mouseup',sideBar.dragWidthUp);}
dragWidthMove(e){let width=sideBar.wrapper.clientWidth-10-e.clientX+sideBar.mouseInitX;sideBar.wrapper.style.width=width+'px';sideBar.mouseInitX=e.clientX;}
dragWidthUp(e){window.removeEventListener('mousemove',sideBar.dragWidthMove);}
addFunction(source,inpObject){if(this.currentFunction===source){sideBar.wrapper.style.display='';return;}else{this.cleanAll();}
if(this.wrapper.style.display=='none'){this.wrapper.style.display='';}
if(typeof window[inpObject]!=='object'){let script=document.createElement('script');script.src=source;document.getElementsByTagName('head')[0].appendChild(script);}else{window[inpObject]=new window[inpObject].constructor(window[inpObject]);}
this.currentFunction=source;}
setFocus(inInput){this.focusElement=inInput;this.focusElement.focus();}
cleanAll(){this.table.innerHTML='';this.btnContainer.innerHTML='';}
addSelect(inpObj,caption,inpVal,selectType,isFocus){let col=document.createElement('div'),row=this.addRow(),input;col.classList.add('sideBarCol1');col.innerHTML=caption;row.appendChild(col);col=document.createElement('div');col.classList.add('sideBarCol2');row.appendChild(col);if(inpObj){input=inpObj;}else{input=document.createElement('input');input.id='input_'+this.inputCount++;input.type='caption';input.setAttribute('autocomplete','off');input.value=inpVal;input.classList.add('sideBarSelect');}
input.onfocus=function(){selection.filter=selectType;selection.textBox=this;selection.selectList.readList(this.value);this.scrollLeft=this.scrollWidth;this.setSelectionRange(this.value.length,this.value.length);selection.clearSelection(false);selection.setSelection();};input.onblur=function(e){row.classList.remove('focus');selection.filter=selectFilter.NONE;selection.textBox=null;selection.clearSelection();};input.addEventListener('input',function(e){clearTimeout(this.timeout);this.timeout=setTimeout(function(){selection.selectList.readList(input.value);selection.clearSelection(false);selection.setSelection();},1000);},false);col.appendChild(input);if(isFocus)this.setFocus(input);return input;}
addTextBox(inpObj,caption,inpVal,inpType,isFocus){let row=this.addRow(),col=document.createElement('div'),input;col.classList.add('sideBarCol1');col.innerHTML=caption;row.appendChild(col);col=document.createElement('div');col.classList.add('sideBarCol2');row.appendChild(col);if(inpObj){input=inpObj;}else{input=document.createElement('input');input.id='input_'+this.inputCount++;input.type='caption';input.setAttribute('autocomplete','off');input.value=inpVal;input.inpType=inpType;input.classList.add('sideBarSelect');}
input.onfocus=function(){this.scrollLeft=this.scrollWidth;this.setSelectionRange(this.value.length,this.value.length);};input.onblur=function(e){row.classList.remove('focus');};input.onkeypress=function(e){if(e.which==0)
return true;if(this.inpType=='string')
return true;if(e.which.between(48,57)||e.which==8)
return true;if(this.inpType=='float'&&e.which==46&&this.value.indexOf('.')==-1)
return true;return false;};col.appendChild(input);if(isFocus)this.setFocus(input);return input;}
addMultiOption(inpObj,caption,isFocus,callback){let col=document.createElement('div'),row=this.addRow(),select;col.classList.add('sideBarCol1');col.innerHTML=caption;row.appendChild(col);col=document.createElement('div');col.classList.add('sideBarCol2');row.appendChild(col);if(inpObj){select=inpObj;}else{select=document.createElement('select');select.id='input_'+this.inputCount++;select.classList.add('sideBarSelect');select.onchange=callback;}
col.appendChild(select);if(isFocus)this.setFocus(select);return select;}
addRow(){let row=document.createElement('div');row.classList.add('sideBarRow');this.table.appendChild(row);return row;}
addBtnRow(){let row=document.createElement('div');row.classList.add('sideBarRow');this.btnContainer.appendChild(row);return row;}
addCheckBox(inpObj,caption,isChecked,parent){let label=document.createElement('label'),span=document.createElement('span'),input;label.innerHTML=caption;label.classList.add('sideBarCheckContainer');span.classList.add('sideBarCheck');if(inpObj){input=inpObj;}else{input=document.createElement('input');input.id='input_'+this.inputCount++;input.type='checkbox';if(isChecked)
input.setAttribute('checked','');}
label.appendChild(input);label.appendChild(span);if(parent){parent.appendChild(label);}else{let row=document.createElement('div');row.classList.add('sideBarRow');row.appendChild(label);this.table.appendChild(row);}
return input;}
addRadio(inpObj,caption,groupName,isChecked,parent){let label=document.createElement('label'),span=document.createElement('span'),input;label.classList.add('sideBarRadioContainer');span.classList.add('sideBarRadio');if(inpObj){input=inpObj;}else{input=document.createElement('input');input.id='input_'+this.inputCount++;input.type='radio';input.name=groupName;if(isChecked)
input.setAttribute('checked','');}
label.appendChild(input);label.appendChild(span);label.innerHTML=label.innerHTML+caption;if(parent){parent.appendChild(label);}else{let row=document.createElement('div');row.classList.add('sideBarRow');row.appendChild(label);this.table.appendChild(row);}
return input;}
addMultiOptionAdd(text,parent){let option=document.createElement('option');option.innerHTML=text;parent.appendChild(option);}
addButton(inpObj,caption,parent,callback){let button;if(inpObj){button=inpObj;}else{button=document.createElement('button');button.id='input_'+this.inputCount++;button.innerHTML=caption;button.classList.add('sideBarButton');button.addEventListener('click',callback);}
button.onclick=function(e){sideBar.focusElement.focus();};parent.appendChild(button);return button;}}
const sideBar=new $sideBar();class fringeControl{constructor(){this.wrap=document.getElementById('fringeWrap');let table=document.createElement('table');table.id='fringeValTable';this.wrap.appendChild(table);this.vBodie=document.createElement('tbody');table.appendChild(this.vBodie);table=document.createElement('table');table.id='fringeTable';this.wrap.appendChild(table);this.fBodie=document.createElement('tbody');table.appendChild(this.fBodie);this.colors=[[1,0,0,1],[1,0.43,0,1],[1,0.69,0,1],[1,0.855,0,1],[1,1,0,1],[0.675,1,0,1],[0,1,0,1],[0,0.75,0,1],[0,0.624,0,1],[0,0.835,0.675,1],[0,1,1,1],[0,0.7,1,1],[0,0.4,1,1],[0,0,1,1],[0,0,0.67,1]];}
setFringe(max,min){let val=max,tr,td;if(this.wrap.style.display=='none'){this.wrap.style.display='';}
this.clear();for(let i=0;i<16;i++){val-=i*(max-min)/15;tr=document.createElement('tr');td=document.createElement('td');td.innerHTML=val.toFixed(2);tr.appendChild(td);this.vBodie.appendChild(tr);}
for(let i=0;i<15;i++){val+=i*(max-min)/15;tr=document.createElement('tr');td=document.createElement('td');td.classList.add('fringeColor');td.style.backgroundColor='rgb('+
(this.colors[i][0]*255>>0).toString()+','+
(this.colors[i][1]*255>>0).toString()+','+
(this.colors[i][2]*255>>0).toString()+')';tr.appendChild(td);this.fBodie.appendChild(tr);}}
clear(){this.fBodie.innerHTML='';this.vBodie.innerHTML='';}}
const fringeBar=new fringeControl();class $contextMenu{constructor(){this.wrapper=document.getElementById('contextMenu');this.idContainer=document.createElement('div');this.idContainer.classList.add('contextMenuIdCont');this.idContainer.setAttribute('hidden','true');this.idBtn=this.appendInfoBtn(this.idContainer,'','copy2Clip');this.idBtn.onclick=(e)=>{e.stopPropagation();e.preventDefault();this.idBtn.setAttribute('toolTip','copied');setTimeout(()=>{this.idBtn.setAttribute('toolTip','');setTimeout(()=>{this.idBtn.setAttribute('toolTip','copy2Clip');},1000);},1000);};this.wrapper.appendChild(this.idContainer);this.canvasBtns=document.createElement('div');this.canvasBtns.classList.add('contextMenuTable');this.zoomBtn=this.appendBtn(this.canvasBtns,'Zooom To');this.hideBtn=this.appendBtn(this.canvasBtns,'Hide');this.hideAllBtn=this.appendBtn(this.canvasBtns,'Hide All');this.showAllBtn=this.appendBtn(this.canvasBtns,'Show All');this.wrapper.appendChild(this.canvasBtns);this.hoverID=null;this.hoverType=null;selectCanvas.oncontextmenu=this.onCanvasClick;document.oncontextmenu=this.contextMenu;}
appendInfoBtn(parent,text,toolTip){const btn=document.createElement('div');btn.innerHTML=text;btn.classList.add('contextMenuBtn','copyable');btn.setAttribute('hidden','true');btn.setAttribute('toolTip',toolTip);parent.appendChild(btn);return btn;}
appendBtn(parent,text){const btn=document.createElement('div');btn.innerHTML=text;btn.classList.add('contextMenuBtn');btn.setAttribute('hidden','true');parent.appendChild(btn);return btn;}
onCanvasClick(e){const self=contextMenu,wr=self.wrapper;e.preventDefault();if(wr.style.display=='block')
self.clearAll();wr.style.display='block';wr.style.top=event.clientY-ribbon.height+'px';wr.style.left=event.clientX+'px';if(hover.id&&hover.type){self.hoverID=hover.id;self.hoverType=hover.type;if(self.hoverType==1){self.idBtn.innerHTML='Node '+self.hoverID;}else{self.idBtn.innerHTML='Element '+self.hoverID;}
self.idContainer.setAttribute('hidden','false');self.idBtn.setAttribute('hidden','false');self.zoomBtn.setAttribute('hidden','false');self.hideBtn.setAttribute('hidden','false');}
self.hideAllBtn.setAttribute('hidden','false');self.showAllBtn.setAttribute('hidden','false');window.addEventListener('click',contextMenu.onCloseClick);window.addEventListener('keydown',contextMenu.onKey);}
clearAll(){this.wrapper.style.display='none';for(const btn of this.wrapper.getElementsByClassName('contextMenuBtn')){btn.setAttribute('hidden','true');}
window.removeEventListener('click',this.onCloseClick);window.removeEventListener('keydown',this.onKey);}
onKey(e){e.stopPropagation();if(e.keyCode==27){contextMenu.clearAll();}}
onCloseClick(e){e.stopPropagation();contextMenu.clearAll();}}
const contextMenu=new $contextMenu();class $guiModals{constructor(){this.container=document.getElementById('popModals');}
addCloseBtn(wrap){const button=document.createElement('button');button.classList.add('closeBtn');button.addSvgImage('close');button.addEventListener('click',this.onCloseClick);wrap.appendChild(button);}
addCaption(wrap,text){const div=document.createElement('div');div.innerHTML=text;div.classList.add('modalTitle');wrap.appendChild(div);}
addSplitter(wrap){const div=document.createElement('div');div.classList.add('modalSplitter');wrap.appendChild(div);}
addTable(wrap){const table=document.createElement('div');table.classList.add('divTable');wrap.appendChild(table);return table;}
addRow(table){const row=document.createElement('div');row.classList.add('divTableRow');table.appendChild(row);return row;}
addCell(row){const cell=document.createElement('div');cell.classList.add('divTableCell');row.appendChild(cell);return cell;}
addBtn(parent,caption,callback){const button=document.createElement('button');button.innerHTML=caption;button.classList.add('modalButton');button.addEventListener('click',callback);parent.appendChild(button);return button;}
addDropDown(num,label,id,val,row){let cell,div,span;cell=this.addCell(row);div=document.createElement('div');div.innerHTML=num;div.classList.add('modalTableRowNumber');cell.appendChild(div);cell=this.addCell(row);div=document.createElement('div');div.innerHTML=label;div.classList.add('modalTableRowLabel');cell.appendChild(div);cell=this.addCell(row);div=document.createElement('div');div.id=id;span=document.createElement('span');span.innerHTML=val;div.appendChild(span);div.classList.add('modalDropdown');cell.appendChild(div);div.onclick=function(e){e.stopPropagation();if(this.classList.length==1){guiModals.closeAllDropDown();this.childNodes[1].classList.toggle("show-hide");this.classList.toggle("arrow-active");window.addEventListener('click',guiModals.onDropDownClick);}else{guiModals.closeAllDropDown();}};let ul=document.createElement('ul');ul.classList.add('modalDrpdnCont','show-hide');div.appendChild(ul);return ul;}
appendDropDown(items,ul){let li;for(const item of items){li=document.createElement('li');li.innerHTML=item;li.onclick=this.dropDownOptionClick;ul.appendChild(li);}}
onDropDownOptionClick(e){e.stopPropagation();guiModals.closeAllDropDown();this.parentNode.previousSibling.innerHTML=this.innerHTML;}
onDropDownClick(e){e.stopPropagation();guiModals.closeAllDropDown();}
closeAllDropDown(){for(const ddElm of document.getElementsByClassName("modalDrpdnCont")){if(ddElm.classList.length==1){ddElm.classList.toggle("show-hide");ddElm.parentNode.classList.toggle("arrow-active");}}
window.removeEventListener('click',this.onDropDownClick);}
clearAll(){this.container.innerHTML='';guiModals.container.style.display='none';window.removeEventListener('click',this.onCloseClick);window.removeEventListener('keydown',this.onKey);}
onCloseClick(e){e.stopPropagation();guiModals.clearAll();}
onKey(e){e.stopPropagation();if(e.keyCode==27){guiModals.clearAll();}}}
class $aboutModal extends $guiModals{constructor(){let wrapper=document.createElement('div'),divWrap=document.createElement('div'),div=document.createElement('div'),a=document.createElement('a');super();wrapper.id='modalAbout';wrapper.classList.add('modalContent');this.container.appendChild(wrapper);divWrap.id='modalAboutText';wrapper.appendChild(divWrap);div.innerHTML='Fem4Web';div.id='modalAboutTitle';divWrap.appendChild(div);div=document.createElement('div');div.innerHTML='Web .h5 file viewer';div.id='modalAboutSubTitle';divWrap.appendChild(div);div=document.createElement('div');div.id='modalAboutVersion';divWrap.appendChild(div);div=document.createElement('div');div.innerHTML='Fem4Web is an open source Nastran FEM .bdf/.dat files online viewer. It allows to do basic measurements, display model information such as node/element IDs and properties. You could do it on any computer with modern web browser.';div.id='modalAboutDescription';divWrap.appendChild(div);div=document.createElement('div');div.id='modalAboutLogo';div.addSvgImage('logo');wrapper.appendChild(div);div=document.createElement('div');div.id='modelAboutFoooter';div.innerHTML='Developed by ';a.href='mailto:nikita.avdeev@gulfstream.com';a.innerHTML='Nikita Avdeev';div.appendChild(a);wrapper.appendChild(div);window.addEventListener('click',this.onCloseClick);window.addEventListener('keydown',this.onKey);this.container.style.display='block';}}
class $openModal extends $guiModals{constructor(){let wrapper=document.createElement('div'),div=document.createElement('div'),button=document.createElement('button'),table,row,ul,btn;super();wrapper.id='modalOpenFile';wrapper.classList.add('modalContent');this.addCloseBtn(wrapper);this.addCaption(wrapper,'Open Database');this.addSplitter(wrapper);table=this.addTable(wrapper);row=this.addRow(table);ul=this.addDropDown('1','Select Program:','openProgram','GVI',row);this.appendDropDown(['GVI','AAP'],ul);row=this.addRow(table);ul=this.addDropDown('2','Select Category:','openCategory','Static',row);this.appendDropDown(['Static','Fatigue','Test'],ul);row=this.addRow(table);ul=this.addDropDown('3','Select Model:','openModel','GVI_E1_F1',row);this.appendDropDown(['GVI_E1_F1','GVI_E2_F2','GVI_E2_F2'],ul);div=document.createElement('div');div.classList.add('modalBtnContainer');wrapper.appendChild(div);btn=this.addBtn(div,'Open',this.openDB);btn=this.addBtn(div,'Close',this.onCloseClick);window.addEventListener('keydown',this.onKey);this.container.appendChild(wrapper);this.container.style.display='block';}
openDB(e){let xhr=new XMLHttpRequest();e.stopPropagation();xhr.open('POST','/openDB',true);xhr.setRequestHeader('Content-Type','application/json;charset=UTF-8');xhr.send(JSON.stringify({'program':document.getElementById('openProgram').firstChild.innerHTML,'category':document.getElementById('openCategory').firstChild.innerHTML,'model':document.getElementById('openModel').firstChild.innerHTML}));loaderShow();xhr.onreadystatechange=function(){if(xhr.readyState===4&&xhr.status===200){loadModel.load(JSON.parse(xhr.responseText));guiModals.clearAll();loaderFade();}};}}
class $modalImportBdf extends $guiModals{constructor(){let wrapper=document.createElement('div'),div=document.createElement('div'),input=document.createElement('input'),btnCont=document.createElement('div'),span=document.createElement('span'),label=document.createElement('label');super();this.files=null;wrapper.id='modalImportBdf';wrapper.classList.add('modalContent');this.addCloseBtn(wrapper);this.addCaption(wrapper,'Import Model');this.addSplitter(wrapper);div.classList.add('modalFileDrop');input.type='file';input.id='modalImportBdfFiles';input.style.display='none';input.setAttribute('multiple','');div.appendChild(input);span.innerHTML='Choose a files';span.onclick=()=>{input.click();};label.appendChild(span);span=document.createElement('span');span.innerHTML=' or drag it here';label.appendChild(span);div.appendChild(label);wrapper.appendChild(div);btnCont=document.createElement('div');btnCont.classList.add('modalBtnContainer');const applyBtn=this.addBtn(btnCont,'Import',this.importBdfClick);const closeBtn=this.addBtn(btnCont,'Close',this.onCloseClick);wrapper.appendChild(btnCont);this.container.appendChild(wrapper);this.container.style.display='block';window.addEventListener('keydown',this.onKey);['dragover','dragenter'].forEach((event)=>{div.addEventListener(event,(e)=>{e.preventDefault();e.stopPropagation();e.dataTransfer.dropEffect="move";e.dataTransfer.effectAllowed='move';div.classList.add('is-dragover');});});['dragleave','dragend','drop'].forEach((event)=>{div.addEventListener(event,function(e){e.preventDefault();e.stopPropagation();div.classList.remove('is-dragover');});});div.ondrop=(e)=>{applyBtn.files=e.dataTransfer.files;label.textContent=applyBtn.files.length>1?applyBtn.files.length+' files selected':applyBtn.files[0].name;};input.onchange=(e)=>{applyBtn.files=e.target.files;label.textContent=applyBtn.files.length>1?applyBtn.files.length+' files selected':applyBtn.files[0].name;};}
importBdfClick(e){importBdf=new $importBdf(e.target.files);guiModals.clearAll();}}
const guiModals=new $guiModals();class glMath{constructor(){this.PI=Math.PI||3.14159265359;this.PiOver2=this.PI*0.5;this.PiOver4=this.PI*0.25;this.TwoPi=this.PI*2;this.PI180=this.PI/180;this.PI180Rev=180/this.PI;this.GlEpsilon=1e-06;}
static Rad2Deg(d){return d/this.PI180;}
static Deg2Rad(d){return d*this.PI180;}}
const $glMath=new glMath();class glVec3{constructor(x=0,y=0,z=0){this.xyz=[x,y,z];}
get length(){let v=this.xyz;return Math.sqrt(v[0]*v[0]+v[1]*v[1]+v[2]*v[2]);}
get x(){return this.xyz[0];}
get y(){return this.xyz[1];}
get z(){return this.xyz[2];}
copy(inpV){let v=inpV.xyz||inpV;this.xyz=v;}
add(inpV){let v=this.xyz,vv=inpV.xyz||inpV;v[0]+=vv[0];v[1]+=vv[1];v[2]+=vv[2];return this;}
scaleAndAdd(inpV,s){let v=this.xyz,vv=inpV.xyz||inpV;v[0]+=s*vv[0];v[1]+=s*vv[1];v[2]+=s*vv[2];return this;}
sub(inpV){let v=this.xyz,vv=inpV.xyz||inpV;v[0]-=vv[0];v[1]-=vv[1];v[2]-=vv[2];return this;}
normalize(){let v=this.xyz,invL=1/this.length;v[0]*=invL;v[1]*=invL;v[2]*=invL;return this;}
scale(s){let v=this.xyz;v[0]*=s;v[1]*=s;v[2]*=s;return this;}
dot(inpV){let v=this.xyz,vv=inpV.xyz||inpV;return v[0]*vv[0]+v[1]*vv[1]+v[2]*vv[2];}
cross(inpV){let v=this.xyz,vv=inpV.xyz||inpV;this.xyz=[v[1]*vv[2]-v[2]*vv[1],v[2]*vv[0]-v[0]*vv[2],v[0]*vv[1]-v[1]*vv[0]];return this;}
lerp(inpV,t){let v=this.xyz,vv=inpV.xyz||inpV;this.xyz=[(1-t)*v[0]+t*vv[0],(1-t)*v[1]+t*vv[1],(1-t)*v[2]+t*vv[2]];return this;}
static getNormal(inpP1,inpP2,inpP3){let p1=inpP1.xyz||inpP1,p2=inpP2.xyz||inpP2,p3=inpP3.xyz||inpP3,v=[p2[0]-p1[0],p2[1]-p1[1],p2[2]-p1[2]],vv=[p3[0]-p1[0],p3[1]-p1[1],p3[2]-p1[2]];return new glVec3(v[1]*vv[2]-v[2]*vv[1],v[2]*vv[0]-v[0]*vv[2],v[0]*vv[1]-v[1]*vv[0]).normalize();}
static clone(){let v=this.xyz;return new glVec3(v[0],v[1],v[2]);}
static cross(inpV,inpVV){let v=inpV.xyz||inpV,vv=inpVV.xyz||inpVV;return new glVec3(v[1]*vv[2]-v[2]*vv[1],v[2]*vv[0]-v[0]*vv[2],v[0]*vv[1]-v[1]*vv[0]);}
static dot(inpV,inpVV){let v=inpV.xyz||inpV,vv=inpVV.xyz||inpVV;return v[0]*vv[0]+v[1]*vv[1]+v[2]*vv[2];}
static sub(inpV,inpVV){let v=inpV.xyz||inpV,vv=inpVV.xyz||inpVV;return new glVec3(v[0]-vv[0],v[1]-vv[1],v[2]-vv[2]);}
static add(inpV,inpVV){let v=inpV.xyz||inpV,vv=inpVV.xyz||inpVV;return new glVec3(v[0]+vv[0],v[1]+vv[1],v[2]+vv[2]);}
static scaleAndAdd(...args){let ans=new glVec3(),v;for(let i=0;i<args.length;i+=2){v=args[i].xyz||args[i];ans.xyz[0]+=args[i+1]*v[0];ans.xyz[1]+=args[i+1]*v[1];ans.xyz[2]+=args[i+1]*v[2];}
return ans;}
static lerp(inpV,inpVV,t){let v=inpV.xyz||inpV,vv=inpVV.xyz||inpVV,s=(1-t);return new glVec3(s*v[0]+t*vv[0],s*v[1]+t*vv[1],s*v[2]+t*vv[2]);}
static average(...points){let avg=new glVec3(),inv=1/points.length;for(const p of points){avg.xyz[0]+=p.xyz[0]*inv;avg.xyz[1]+=p.xyz[1]*inv;avg.xyz[2]+=p.xyz[2]*inv;}
return avg;}}
class glMat3{constructor(a00=1,a03=0,a06=0,a01=0,a04=1,a07=0,a02=0,a05=0,a08=1){this.arr33=[a00,a01,a02,a03,a04,a05,a06,a07,a08];return this;}
fromQuaternion(inpQ){let q=inpQ.xyzw;this.arr33=[1-2*(q[1]*q[1]+q[2]*q[2]),2*(q[1]*q[0]-q[2]*q[3]),2*(q[2]*q[0]+q[1]*q[3]),2*(q[1]*q[0]+q[2]*q[3]),1-2*(q[0]*q[0]+q[2]*q[2]),2*(q[2]*q[1]-q[0]*q[3]),2*(q[2]*q[0]-q[1]*q[3]),2*(q[2]*q[1]+q[0]*q[3]),1-2*(q[0]*q[0]+q[1]*q[1])];return this;}
fromQuaternionNorm(inpQ){let q=inpQ.xyzw||inpQ,m=[1-2*(q[1]*q[1]+q[2]*q[2]),2*(q[1]*q[0]-q[2]*q[3]),2*(q[2]*q[0]+q[1]*q[3]),2*(q[1]*q[0]+q[2]*q[3]),1-2*(q[0]*q[0]+q[2]*q[2]),2*(q[2]*q[1]-q[0]*q[3]),2*(q[2]*q[0]-q[1]*q[3]),2*(q[2]*q[1]+q[0]*q[3]),1-2*(q[0]*q[0]+q[1]*q[1])],n=[m[4]*m[8]-m[5]*m[7],m[3]*m[8]-m[5]*m[6],m[3]*m[7]-m[4]*m[6]];this.arr33=[n[0],-n[1],n[2],-m[1]*m[8]+m[2]*m[7],m[0]*m[8]-m[2]*m[6],-m[0]*m[7]+m[1]*m[6],m[1]*m[5]-m[2]*m[4],-m[0]*m[5]+m[2]*m[3],m[0]*m[4]-m[1]*m[3]];return this;}}
class glMat33{constructor(...arr){if(arr.length==9)
this.arr33=[[arr[0],arr[1],arr[2]],[arr[3],arr[4],arr[5]],[arr[6],arr[7],arr[8]]];else if(arr.length==1)
this.arr33=arr;else
this.arr33=[[1,0,0],[0,1,0],[0,0,1]];return this;}
vecMult(inpV){let v=inpV.xyz||inpV,m=this.arr33;return new glVec3(m[0][0]*v[0]+m[0][1]*v[1]+m[0][2]*v[2],m[1][0]*v[0]+m[1][1]*v[1]+m[1][2]*v[2],m[2][0]*v[0]+m[2][1]*v[1]+m[2][2]*v[2]);}
static vecMult(inpM,inpV){let v=inpV.xyz||inpV,m=inpM.arr33||inpM;return new glVec3(m[0][0]*v[0]+m[0][1]*v[1]+m[0][2]*v[2],m[1][0]*v[0]+m[1][1]*v[1]+m[1][2]*v[2],m[2][0]*v[0]+m[2][1]*v[1]+m[2][2]*v[2]);}}
class glMat4{constructor(a00=1,a04=0,a08=0,a12=0,a01=0,a05=1,a09=0,a13=0,a02=0,a06=0,a10=1,a14=0,a03=0,a07=0,a11=0,a15=1){this.arr44=[a00,a01,a02,a03,a04,a05,a06,a07,a08,a09,a10,a11,a12,a13,a14,a15];}
createPerspective(fovy,a,n,f){let fv=1/Math.tan(fovy/2),nf=1/(n-f);this.arr44=[fv/a,0,0,0,0,fv,0,0,0,0,(n+f)*nf,n*f*nf*2,0,0,-1,0];return this;}
createOrtho(l,r,b,t,n,f){let rl=1/(r-l),tb=1/(t-b),fn=1/(f-n);this.arr44=[2*rl,0,0,0,0,2*tb,0,0,0,0,-2*fn,0,-(l+r)*rl,-(t+b)*tb,-(f+n)*fn,1];return this;}
fromQuaternion(inpQ){let q=inpQ.xyzw||inpQ;this.arr44=[1-2*(q[1]*q[1]+q[2]*q[2]),2*(q[1]*q[0]-q[2]*q[3]),2*(q[2]*q[0]+q[1]*q[3]),0,2*(q[1]*q[0]+q[2]*q[3]),1-2*(q[0]*q[0]+q[2]*q[2]),2*(q[2]*q[1]-q[0]*q[3]),0,2*(q[2]*q[0]-q[1]*q[3]),2*(q[2]*q[1]+q[0]*q[3]),1-2*(q[0]*q[0]+q[1]*q[1]),0,0,0,0,1];return this;}
fromQuaternionVC(inpQ,size){let q=inpQ.xyzw||inpQ;this.arr44=[(1-2*(q[1]*q[1]+q[2]*q[2]))/size,2*(q[1]*q[0]-q[2]*q[3])/size,-2*(q[2]*q[0]+q[1]*q[3])/1000,0,2*(q[1]*q[0]+q[2]*q[3])/size,(1-2*(q[0]*q[0]+q[2]*q[2]))/size,-2*(q[2]*q[1]-q[0]*q[3])/1000,0,2*(q[2]*q[0]-q[1]*q[3])/size,2*(q[2]*q[1]+q[0]*q[3])/size,-(1-2*(q[0]*q[0]+q[1]*q[1]))/1000,0,0,0,-2*size/40,1];return this;}
translate(inpV){let m=this.arr44,v=inpV.xyz||inpV;m[12]=m[0]*v[0]+m[4]*v[1]+m[8]*v[2]+m[12];m[13]=m[1]*v[0]+m[5]*v[1]+m[9]*v[2]+m[13];m[14]=m[2]*v[0]+m[6]*v[1]+m[10]*v[2]+m[14];m[15]=m[3]*v[0]+m[7]*v[1]+m[11]*v[2]+m[15];return this;}
static createLookAt(eye,target,up){let f=glVec3.sub(eye,target).normalize(),r=glVec3.cross(up,f).normalize(),u=glVec3.cross(f,r),fv=f.xyz,rv=r.xyz,uv=u.xyz;return new glMat4(rv[0],uv[0],fv[0],-r.dot(eye),rv[1],uv[1],fv[1],-u.dot(eye),rv[2],uv[2],fv[2],-f.dot(eye),0,0,0,1);}
static createView(zoom,center,inpQ){let q=inpQ.xyzw||inpQ,cv=center.xyz||center,rv=[(1-2*(q[1]*q[1]+q[2]*q[2]))*zoom,2*(q[1]*q[0]+q[2]*q[3])*zoom,2*(q[2]*q[0]-q[1]*q[3])*zoom],uv=[2*(q[1]*q[0]-q[2]*q[3])*zoom,(1-2*(q[0]*q[0]+q[2]*q[2]))*zoom,2*(q[2]*q[1]+q[0]*q[3])*zoom],fv=[2*(q[2]*q[0]+q[1]*q[3])*zoom,2*(q[2]*q[1]-q[0]*q[3])*zoom,(1-2*(q[0]*q[0]+q[1]*q[1]))*zoom];return new glMat4(rv[0],rv[1],rv[2],-(rv[0]*cv[0]+rv[1]*cv[1]+rv[2]*cv[2]),uv[0],uv[1],uv[2],-(uv[0]*cv[0]+uv[1]*cv[1]+uv[2]*cv[2]),fv[0],fv[1],fv[2],-(fv[0]*cv[0]+fv[1]*cv[1]+fv[2]*cv[2]),0,0,0,1);}
static LookAtQuat(q,eye){let rv=q.xAxis.xyz,uv=q.yAxis.xyz,fv=q.zAxis.xyz,ev=eye.xyz||eye;return new glMat4(rv[0],rv[1],rv[2],-(rv[0]*ev[0]+rv[1]*ev[1]+rv[2]*ev[2]),uv[0],uv[1],uv[2],-(uv[0]*ev[0]+uv[1]*ev[1]+uv[2]*ev[2]),fv[0],fv[1],fv[2],-(fv[0]*ev[0]+fv[1]*ev[1]+fv[2]*ev[2]),0,0,0,1);}
static multiply(inpM,inpMM){let m=inpM.arr44||inpM,mm=inpMM.arr44||inpMM;return new glMat4(m[0]*mm[0]+m[4]*mm[1]+m[8]*mm[2]+m[12]*mm[3],m[0]*mm[4]+m[4]*mm[5]+m[8]*mm[6]+m[12]*mm[7],m[0]*mm[8]+m[4]*mm[9]+m[8]*mm[10]+m[12]*mm[11],m[0]*mm[12]+m[4]*mm[13]+m[8]*mm[14]+m[12]*mm[15],m[1]*mm[0]+m[5]*mm[1]+m[9]*mm[2]+m[13]*mm[3],m[1]*mm[4]+m[5]*mm[5]+m[9]*mm[6]+m[13]*mm[7],m[1]*mm[8]+m[5]*mm[9]+m[9]*mm[10]+m[13]*mm[11],m[1]*mm[12]+m[5]*mm[13]+m[9]*mm[14]+m[13]*mm[15],m[2]*mm[0]+m[6]*mm[1]+m[10]*mm[2]+m[14]*mm[3],m[2]*mm[4]+m[6]*mm[5]+m[10]*mm[6]+m[14]*mm[7],m[2]*mm[8]+m[6]*mm[9]+m[10]*mm[10]+m[14]*mm[11],m[2]*mm[12]+m[6]*mm[13]+m[10]*mm[14]+m[14]*mm[15],m[3]*mm[0]+m[7]*mm[1]+m[11]*mm[2]+m[15]*mm[3],m[3]*mm[4]+m[7]*mm[5]+m[11]*mm[6]+m[15]*mm[7],m[3]*mm[8]+m[7]*mm[9]+m[11]*mm[10]+m[15]*mm[11],m[3]*mm[12]+m[7]*mm[13]+m[11]*mm[14]+m[15]*mm[15]);}}
class glQuat{constructor(x=0,y=0,z=0,w=1){this.xyzw=[x,y,z,w];}
copy(inpQ){let q=inpQ.xyzw||inpQ;this.xyzw=[q[0],q[1],q[2],q[3]];}
multiply(inpQ){let q=this.xyzw,qq=inpQ.xyzw||inpQ;this.xyzw=[q[0]*qq[3]+q[3]*qq[0]+q[1]*qq[2]-q[2]*qq[1],q[1]*qq[3]+q[3]*qq[1]+q[2]*qq[0]-q[0]*qq[2],q[2]*qq[3]+q[3]*qq[2]+q[0]*qq[1]-q[1]*qq[0],q[3]*qq[3]-q[0]*qq[0]-q[1]*qq[1]-q[2]*qq[2]];return this;}
dot(inpQ){let q=this.xyzw,qq=inpQ.xyzw||inpQ;return q[0]*qq[0]+q[1]*qq[1]+q[2]*qq[2]+q[3]*qq[3];}
length(){let q=this.xyzw;return Math.sqrt(q[0]*q[0]+q[1]*q[1]+q[2]*q[2]+q[3]*q[3]);}
normalize(){let q=this.xyzw,norm=1/this.length();q[0]*=norm;q[1]*=norm;q[2]*=norm;q[3]*=norm;return this;}
slerp(inpQ,t,isShortestPath=false){let q=this.xyzw,qq=inpQ.xyzw||inpQ,qqS,c=q[0]*qq[0]+q[1]*qq[1]+q[2]*qq[2]+q[3]*qq[3];if(c<0&&isShortestPath){c=-c;qqS=[-qq[0],-qq[1],-qq[2],-qq[3]];}else{qqS=[qq[0],qq[1],qq[2],qq[3]];}
let s=1-c*c;if(s<=$glMath.GlEpsilon){s=1-t;q=[s*q[0]+t*qqS[0],s*q[1]+t*qqS[1],s*q[2]+t*qqS[2],s*q[3]+t*qqS[3]];this.normalize();return this;}
s=Math.sqrt(s);let a=Math.atan2(s,c),c0=Math.sin((1-t)*a)/s,c1=Math.sin(t*a)/s;q=[c0*q[0]+c1*qqS[0],c0*q[1]+c1*qqS[1],c0*q[2]+c1*qqS[2],c0*q[3]+c1*qqS[3]];return this;}
fromAngleAxis(inpV,a){let v=inpV.xyz||inpV,s=Math.sin(a/2),c=Math.cos(a/2);this.xyzw=[s*v[0],s*v[1],s*v[2],c];}
fromEuler(v){let c1=Math.cos(v[0]/2),c2=Math.cos(v[1]/2),c3=Math.cos(v[2]/2),s1=Math.sin(v[0]/2),s2=Math.sin(v[1]/2),s3=Math.sin(v[2]/2);this.xyzw=[c3*c2*s1-s3*s2*c1,s3*c2*s1+c3*s2*c1,s3*c2*c1-c3*s2*s1,c3*c2*c1+s3*s2*s1];}
from2AngleAxis(inpV1,a1,inpV2,a2){let inpV3=glVec3.cross(inpV1,inpV2),v1=inpV1.xyz||inpV1,v2=inpV2.xyz||inpV2,v3=inpV3.xyz,s1=Math.sin(a1/2),c1=Math.cos(a1/2),s2=Math.sin(a2/2),c2=Math.cos(a2/2);let qv=glQuat.fromUnitVectors(inpV1,inpV2,inpV3).xyzw;let qr=[s1*v1[0]*c2+c1*s2*v2[0]+s1*v1[1]*s2*v2[2]-s1*v1[2]*s2*v2[1],s1*v1[1]*c2+c1*s2*v2[1]+s1*v1[2]*s2*v2[0]-s1*v1[0]*s2*v2[2],s1*v1[2]*c2+c1*s2*v2[2]+s1*v1[0]*s2*v2[1]-s1*v1[1]*s2*v2[0],c1*c2-s1*v1[0]*s2*v2[0]-s1*v1[1]*s2*v2[1]-s1*v1[2]*s2*v2[2]];this.xyzw=[qr[0]*qv[3]+qr[3]*qv[0]+qr[1]*qv[2]-qr[2]*qv[1],qr[1]*qv[3]+qr[3]*qv[1]+qr[2]*qv[0]-qr[0]*qv[2],qr[2]*qv[3]+qr[3]*qv[2]+qr[0]*qv[1]-qr[1]*qv[0],qr[3]*qv[3]-qr[0]*qv[0]-qr[1]*qv[1]-qr[2]*qv[2]];}
get xAxis(){let q=this.xyzw;return new glVec3(1-2*(q[1]*q[1]+q[2]*q[2]),2*(q[1]*q[0]+q[2]*q[3]),2*(q[2]*q[0]-q[1]*q[3]));}
get yAxis(){let q=this.xyzw;return new glVec3(2*(q[1]*q[0]-q[2]*q[3]),1-2*(q[0]*q[0]+q[2]*q[2]),2*(q[2]*q[1]+q[0]*q[3]));}
get zAxis(){let q=this.xyzw;return new glVec3(2*(q[2]*q[0]+q[1]*q[3]),2*(q[2]*q[1]-q[0]*q[3]),1-2*(q[0]*q[0]+q[1]*q[1]));}
static toRotMatrix(){let q=this.xyzw;return new glMat3(1-2*(q[1]*q[1]+q[2]*q[2]),2*(q[1]*q[0]-q[2]*q[3]),2*(q[2]*q[0]+q[1]*q[3]),2*(q[1]*q[0]+q[2]*q[3]),1-2*(q[0]*q[0]+q[2]*q[2]),2*(q[2]*q[1]-q[0]*q[3]),2*(q[2]*q[0]-q[1]*q[3]),2*(q[2]*q[1]+q[0]*q[3]),1-2*(q[0]*q[0]+q[1]*q[1]));}
static clone(){let q=this.xyzw;return new glQuat(q[0],q[1],q[2],q[3]);}
static vecMult(inpQ,inpV){let q=inpQ.xyzw,v=inpV.xyz,uv=[q[1]*v[2]-q[2]*v[1],q[2]*v[0]-q[0]*v[2],q[0]*v[1]-q[1]*v[0]],uuv=[q[1]*uv[2]-q[2]*uv[1],q[2]*uv[0]-q[0]*uv[2],q[0]*uv[1]-q[1]*uv[0]];return new glVec3(v[0]+2*q[3]*uv[0]+2*uuv[0],v[1]+2*q[3]*uv[1]+2*uuv[1],v[2]+2*q[3]*uv[2]+2*uuv[2]);}
static slerp(inpQ,inpQQ,t,isShortestPath=false){let q=inpQ.xyzw||inpQ,qq=inpQQ.xyzw||inpQQ,qqS,c=q[0]*qq[0]+q[1]*qq[1]+q[2]*qq[2]+q[3]*qq[3];if(c<0&&isShortestPath){c=-c;qqS=[-qq[0],-qq[1],-qq[2],-qq[3]];}else{qqS=[qq[0],qq[1],qq[2],qq[3]];}
let s=1-c*c;if(s<=$glMath.GlEpsilon){s=1-t;let out=new glQuat(s*q[0]+t*qqS[0],s*q[1]+t*qqS[1],s*q[2]+t*qqS[2],s*q[3]+t*qqS[3]);out.normalize();return out;}
s=Math.sqrt(s);let a=Math.atan2(s,c),c0=Math.sin((1-t)*a)/s,c1=Math.sin(t*a)/s;return new glQuat(c0*q[0]+c1*qqS[0],c0*q[1]+c1*qqS[1],c0*q[2]+c1*qqS[2],c0*q[3]+c1*qqS[3]);}
static fromUnitVectors(inpV1,inpV2,inpV3){let v1=inpV1.xyz||inpV1,v2=inpV2.xyz||inpV2,v3=inpV3.xyz||inpV2,sv;if(v1[0]+v2[1]+v3[2]>0){sv=0.5/Math.sqrt(1+v1[0]+v2[1]+v3[2]);return new glQuat((v2[2]-v3[1])*sv,(v3[0]-v1[2])*sv,(v1[1]-v2[0])*sv,0.25/sv);}else if(v1[0]>v2[1]&&v1[0]>v3[2]){sv=0.5/Math.sqrt(1.0+v1[0]-v2[1]-v3[2]);return new glQuat(0.25/sv,(v2[0]+v1[1])*sv,(v3[0]+v1[2])*sv,(v2[2]-v3[1])*sv);}else if(v2[1]>v3[2]){sv=0.5/Math.sqrt(1.0+v2[1]-v1[0]-v3[2]);return new glQuat((v2[0]+v1[1])*sv,0.25/sv,(v3[1]+v2[2])*sv,(v3[0]-v1[2])*sv);}else{sv=0.5/Math.sqrt(1.0+v3[2]-v1[0]-v2[1]);return new glQuat((v3[0]+v1[2])*sv,(v3[1]+v2[2])*sv,0.25/sv,(v1[1]-v2[0])*sv);}}}
const BARYCENTRIC={NODE:new Float32Array([1,1,1]),BAR:new Float32Array([1,0,1,0,1,1,]),TRIA:new Float32Array([1,0,0,0,1,0,0,0,1,]),QUAD:new Float32Array([1,0,1,0,0,1,0,1,0,0,1,0,1,0,1,0,0,1,]),};glNodes={count:null,vao:null,selectVAO:null,coordBuffer:null,colorBuffer:null,selectCoordBuffer:null,stageBuffer:null,selectStageBuffer:null,coords:null,colors:null,selColors:null,stage:null,};glBars={count:null,vao:null,selectVAO:null,selectCentrVAO:null,coordBuffer:null,colorBuffer:null,selectCoordBuffer:null,selectCtrCoordBuffer:null,stageBuffer:null,selectStageBuffer:null,selectCtrStageBuffer:null,coords:null,centroids:null,colors:null,barycentric:null,selColors:null,selCtrColors:null,stage:null,ctrStage:null,};glTrias={count:null,vao:null,selectVAO:null,coordBuffer:null,colorBuffer:null,selectCoordBuffer:null,stageBuffer:null,selectStageBuffer:null,coords:null,colors:null,barycentric:null,normals:null,selColors:null,stage:null,};glQuads={count:null,vao:null,selectVAO:null,coordBuffer:null,colorBuffer:null,selectCoordBuffer:null,stageBuffer:null,selectStageBuffer:null,coords:null,colors:null,barycentric:null,normals:null,selColors:null,stage:null,};class $glMesh{constructor(){this.hasMoments=false;this.maxPoint=new glVec3();this.minPoint=new glVec3();this.center=null;this.maxR=null;fmNodesDict={};fmElemsDict={};fmCIDDict={};fmPropDict={};fmMatDict={};glNodes.count=0;glBars.count=0;glTrias.count=0;glQuads.count=0;}
init(){this.findMaxMin();this.initBuffers(glNodes);this.initBuffers(glBars);this.initBuffers(glTrias);this.initBuffers(glQuads);this.initSelectBuffers(glNodes);this.initSelectBuffers(glBars);this.initSelectCentrBuffers(glBars);this.initSelectBuffers(glTrias);this.initSelectBuffers(glQuads);camera.fitZoom();render.drawSelectScene();}
findMaxMin(){for(let i=0;i<glNodes.count*3;i++){if(glNodes.coords[i]>this.maxPoint.xyz[i%3]||i<3)
this.maxPoint.xyz[i%3]=glNodes.coords[i];if(glNodes.coords[i]<this.minPoint.xyz[i%3]||i<3)
this.minPoint.xyz[i%3]=glNodes.coords[i];}
this.center=glVec3.scaleAndAdd(this.maxPoint,0.5,this.minPoint,0.5);this.maxR=glVec3.scaleAndAdd(this.maxPoint,0.5,this.minPoint,-0.5).length;}
initBuffers(inpObj){let bufferBarycentric,bufferNormals;inpObj.vao=gl.createVertexArray();gl.bindVertexArray(inpObj.vao);inpObj.coordBuffer=gl.createBuffer();gl.bindBuffer(gl.ARRAY_BUFFER,inpObj.coordBuffer);gl.bufferData(gl.ARRAY_BUFFER,inpObj.coords,gl.STATIC_DRAW);gl.enableVertexAttribArray(render.shaderModel.aPosition);gl.vertexAttribPointer(render.shaderModel.aPosition,3,gl.FLOAT,false,0,0);inpObj.colorBuffer=gl.createBuffer();gl.bindBuffer(gl.ARRAY_BUFFER,inpObj.colorBuffer);gl.bufferData(gl.ARRAY_BUFFER,inpObj.colors,gl.STATIC_DRAW);gl.enableVertexAttribArray(render.shaderModel.aColor);gl.vertexAttribPointer(render.shaderModel.aColor,4,gl.FLOAT,false,0,0);inpObj.stageBuffer=gl.createBuffer();gl.bindBuffer(gl.ARRAY_BUFFER,inpObj.stageBuffer);gl.bufferData(gl.ARRAY_BUFFER,inpObj.stage,gl.STATIC_DRAW);gl.enableVertexAttribArray(render.shaderModel.aStage);gl.vertexAttribPointer(render.shaderModel.aStage,1,gl.FLOAT,false,0,0);if(inpObj.hasOwnProperty('barycentric')){bufferBarycentric=gl.createBuffer();gl.bindBuffer(gl.ARRAY_BUFFER,bufferBarycentric);gl.bufferData(gl.ARRAY_BUFFER,inpObj.barycentric,gl.STATIC_DRAW);gl.enableVertexAttribArray(render.shaderModel.aBarycentric);gl.vertexAttribPointer(render.shaderModel.aBarycentric,3,gl.FLOAT,false,0,0);}
if(inpObj.hasOwnProperty('normals')){bufferNormals=gl.createBuffer();gl.bindBuffer(gl.ARRAY_BUFFER,bufferNormals);gl.enableVertexAttribArray(render.shaderModel.aNormal);gl.bufferData(gl.ARRAY_BUFFER,inpObj.normals,gl.STATIC_DRAW);gl.vertexAttribPointer(render.shaderModel.aNormal,3,gl.FLOAT,false,0,0);}
gl.bindVertexArray(null);if(bufferBarycentric)gl.deleteBuffer(bufferBarycentric);if(bufferNormals){gl.deleteBuffer(bufferNormals);inpObj.normals=[];}}
initSelectBuffers(inpObj){let bufferBarycentric;inpObj.selectVAO=gl.createVertexArray();gl.bindVertexArray(inpObj.selectVAO);inpObj.selectCoordBuffer=gl.createBuffer();gl.bindBuffer(gl.ARRAY_BUFFER,inpObj.selectCoordBuffer);gl.bufferData(gl.ARRAY_BUFFER,inpObj.coords,gl.STATIC_DRAW);gl.enableVertexAttribArray(render.shaderSelect.aPosition);gl.vertexAttribPointer(render.shaderSelect.aPosition,3,gl.FLOAT,false,0,0);let bufferSelColors=gl.createBuffer();gl.bindBuffer(gl.ARRAY_BUFFER,bufferSelColors);gl.bufferData(gl.ARRAY_BUFFER,inpObj.selColors,gl.STATIC_DRAW);gl.enableVertexAttribArray(render.shaderSelect.aColor);gl.vertexAttribPointer(render.shaderSelect.aColor,4,gl.FLOAT,false,0,0);inpObj.selectStageBuffer=gl.createBuffer();gl.bindBuffer(gl.ARRAY_BUFFER,inpObj.selectStageBuffer);gl.bufferData(gl.ARRAY_BUFFER,inpObj.stage,gl.STATIC_DRAW);gl.enableVertexAttribArray(render.shaderSelect.aStage);gl.vertexAttribPointer(render.shaderSelect.aStage,1,gl.FLOAT,false,0,0);if(inpObj.hasOwnProperty('barycentric')){bufferBarycentric=gl.createBuffer();gl.bindBuffer(gl.ARRAY_BUFFER,bufferBarycentric);gl.bufferData(gl.ARRAY_BUFFER,inpObj.barycentric,gl.STATIC_DRAW);gl.enableVertexAttribArray(render.shaderSelect.aBarycentric);gl.vertexAttribPointer(render.shaderSelect.aBarycentric,3,gl.FLOAT,false,0,0);}
gl.bindVertexArray(null);if(bufferBarycentric){gl.deleteBuffer(bufferBarycentric);inpObj.barycentric=[];}
if(bufferSelColors){gl.deleteBuffer(bufferSelColors);inpObj.selColors=[];}}
initSelectCentrBuffers(inpObj){inpObj.selectCentrVAO=gl.createVertexArray();gl.bindVertexArray(inpObj.selectCentrVAO);inpObj.selectCtrCoordBuffer=gl.createBuffer();gl.bindBuffer(gl.ARRAY_BUFFER,inpObj.selectCtrCoordBuffer);gl.bufferData(gl.ARRAY_BUFFER,inpObj.centroids,gl.STATIC_DRAW);gl.enableVertexAttribArray(render.shaderSelect.aPosition);gl.vertexAttribPointer(render.shaderSelect.aPosition,3,gl.FLOAT,false,0,0);let bufferSelColors=gl.createBuffer();gl.bindBuffer(gl.ARRAY_BUFFER,bufferSelColors);gl.bufferData(gl.ARRAY_BUFFER,inpObj.selCtrColors,gl.STATIC_DRAW);gl.enableVertexAttribArray(render.shaderSelect.aColor);gl.vertexAttribPointer(render.shaderSelect.aColor,4,gl.FLOAT,false,0,0);inpObj.selectCtrStageBuffer=gl.createBuffer();gl.bindBuffer(gl.ARRAY_BUFFER,inpObj.selectCtrStageBuffer);gl.bufferData(gl.ARRAY_BUFFER,inpObj.ctrStage,gl.STATIC_DRAW);gl.enableVertexAttribArray(render.shaderSelect.aStage);gl.vertexAttribPointer(render.shaderSelect.aStage,1,gl.FLOAT,false,0,0);gl.bindVertexArray(null);if(bufferSelColors){gl.deleteBuffer(bufferSelColors);inpObj.selCtrColors=[];}}
draw(){if(render.howShow==glRenderStyle.SHADED){gl.uniform1f(render.shaderModel.uShowLight,1);}
if(render.howShow==glRenderStyle.WIREFRAME){gl.uniform4fv(render.shaderModel.uStrokeColor,[0.0,0.0,0.671,1.0]);}else{gl.uniform4fv(render.shaderModel.uStrokeColor,[0.0,0.0,0.671,render.alpha]);}
if(render.shrink){gl.uniform1f(render.shaderModel.uShrink,render.shrinkLevel);}else{gl.uniform1f(render.shaderModel.uShrink,0.0);}
gl.uniform1f(render.shaderModel.uShowEdges,render.showEdges);gl.uniform1f(render.shaderModel.uAlpha,render.alpha);if(glQuads.count){gl.bindVertexArray(glQuads.vao);gl.drawArrays(gl.TRIANGLES,0,glQuads.count*6);}
if(glTrias.count){gl.bindVertexArray(glTrias.vao);gl.drawArrays(gl.TRIANGLES,0,glTrias.count*3);}
gl.uniform1f(render.shaderModel.uShowEdges,0);gl.uniform1f(render.shaderModel.uShowLight,0);if(render.howShow==glRenderStyle.WIREFRAME){gl.uniform1f(render.shaderModel.uAlpha,1.0);}
if(glBars.count){gl.bindVertexArray(glBars.vao);gl.drawArrays(gl.LINES,0,glBars.count*2);}
if(render.shrink)
gl.uniform1f(render.shaderModel.uShrink,0.0);if(glNodes.count){gl.bindVertexArray(glNodes.vao);gl.drawArrays(gl.POINTS,0,glNodes.count);}
gl.bindVertexArray(null);}
drawSelect(){gl.disable(gl.BLEND);if(render.shrink==true){gl.uniform1f(render.shaderSelect.uShrink,render.shrinkLevel);}else{gl.uniform1f(render.shaderSelect.uShrink,0.0);}
if(glQuads.count){gl.bindVertexArray(glQuads.selectVAO);gl.drawArrays(gl.TRIANGLES,0,glQuads.count*6);}
if(glTrias.count){gl.bindVertexArray(glTrias.selectVAO);gl.drawArrays(gl.TRIANGLES,0,glTrias.count*3);}
if(glBars.count){gl.bindVertexArray(glBars.selectVAO);gl.drawArrays(gl.LINES,0,glBars.count*2);gl.uniform1f(render.shaderSelect.uShrink,0.0);gl.bindVertexArray(glBars.selectCentrVAO);gl.drawArrays(gl.POINTS,0,glBars.count);}
if(glNodes.count){gl.bindVertexArray(glNodes.selectVAO);gl.drawArrays(gl.POINTS,0,glNodes.count);}
gl.bindVertexArray(null);}
getScreenCoords(){let screenCoords=new Float32Array(glNodes.count*4);gl.useProgram(render.shaderModel.program);let bufferCoordsTrans=gl.createBuffer();gl.bindBuffer(gl.ARRAY_BUFFER,bufferCoordsTrans);gl.bufferData(gl.ARRAY_BUFFER,screenCoords,gl.STREAM_READ);gl.bindBuffer(gl.ARRAY_BUFFER,null);gl.bindTransformFeedback(gl.TRANSFORM_FEEDBACK,render.tf);gl.bindBufferBase(gl.TRANSFORM_FEEDBACK_BUFFER,0,bufferCoordsTrans);gl.enable(gl.RASTERIZER_DISCARD);gl.beginTransformFeedback(gl.POINTS);gl.bindVertexArray(glNodes.vao);gl.drawArrays(gl.POINTS,0,glNodes.count);gl.endTransformFeedback();gl.disable(gl.RASTERIZER_DISCARD);gl.finish();gl.getBufferSubData(gl.TRANSFORM_FEEDBACK_BUFFER,0,screenCoords);gl.bindBufferBase(gl.TRANSFORM_FEEDBACK_BUFFER,0,null);gl.deleteBuffer(bufferCoordsTrans);return screenCoords;}
updateCoords(){gl.useProgram(render.shaderModel.program);for(const obj of[glNodes,glBars,glTrias,glQuads]){gl.bindBuffer(gl.ARRAY_BUFFER,obj.coordBuffer);gl.bufferData(gl.ARRAY_BUFFER,obj.coords,gl.STATIC_DRAW);}}
updateColors(){gl.useProgram(render.shaderModel.program);for(const obj of[glNodes,glBars,glTrias,glQuads]){gl.bindBuffer(gl.ARRAY_BUFFER,obj.colorBuffer);gl.bufferData(gl.ARRAY_BUFFER,obj.colors,gl.STATIC_DRAW);}}
updateStages(){gl.useProgram(render.shaderModel.program);for(const obj of[glNodes,glBars,glTrias,glQuads]){gl.bindBuffer(gl.ARRAY_BUFFER,obj.stageBuffer);gl.bufferData(gl.ARRAY_BUFFER,obj.stage,gl.STATIC_DRAW);}}
updateSelectCoords(){gl.useProgram(render.shaderSelect.program);for(const obj of[glNodes,glBars,glTrias,glQuads]){gl.bindBuffer(gl.ARRAY_BUFFER,obj.selectCoordBuffer);gl.bufferData(gl.ARRAY_BUFFER,obj.coords,gl.STATIC_DRAW);}
gl.bindBuffer(gl.ARRAY_BUFFER,glBars.selectCtrCoordBuffer);gl.bufferData(gl.ARRAY_BUFFER,glBars.centroids,gl.STATIC_DRAW);render.noMovementUpdate();}
updateSelectStages(){gl.useProgram(render.shaderSelect.program);for(const obj of[glNodes,glBars,glTrias,glQuads]){gl.bindBuffer(gl.ARRAY_BUFFER,obj.selectStageBuffer);gl.bufferData(gl.ARRAY_BUFFER,obj.stage,gl.STATIC_DRAW);}
gl.bindBuffer(gl.ARRAY_BUFFER,glBars.selectCtrStageBuffer);gl.bufferData(gl.ARRAY_BUFFER,glBars.ctrStage,gl.STATIC_DRAW);render.noMovementUpdate();}}
var glCameraMove={state:0,set:function(inp_val){camera.needUpdate=true;if(inp_val==this.NONE)
render.noMovementUpdate();if(inp_val!==this.state){switch(this.state){case this.SPIN:camera.rotZ=0;camera.quat.copy(camera.curQ);camera.right.copy(camera.curQ.xAxis);camera.up.copy(camera.curQ.yAxis);camera.fwd.copy(camera.curQ.zAxis);break;case this.ROTATE:camera.rotX=0;camera.rotY=0;camera.updateDepth();camera.quat.copy(camera.curQ);camera.right.copy(camera.curQ.xAxis);camera.up.copy(camera.curQ.yAxis);camera.fwd.copy(camera.curQ.zAxis);break;case this.PAN:camera.panX=0;camera.panY=0;camera.updateDepth();break;}}
if(inp_val==this.NONE)
camera.needUpdate=false;this.state=inp_val;},isWheelZoom:false,NONE:0,ROTATE:1,ZOOM:2,PAN:3,SPIN:4,};class $glCamera{constructor(){this.view=new glMat4();this.projection=new glMat4();this.PV=new glMat4();this.normMat=new glMat3();this.nearPlane=-1000;this.farPlane=1000;this.rotX=0;this.rotY=0;this.rotZ=0;this.panX=0;this.panY=0;this.quat=new glQuat();this.right=new glVec3(1,0,0);this.up=new glVec3(0,1,0);this.fwd=new glVec3(0,0,1);this.curQ=new glQuat();this.curCenter=new glVec3();this.curZoom=1;this.needUpdate=false;this.needUpdateProjection=true;this.isAnimate=false;this.animateF=0;this.initQ=new glQuat();this.initCenter=new glVec3();this.initZoom=0;this.animQ=new glQuat();this.animCenter=new glVec3();this.animZoom=0;this.viewSizeCoord=18;this.viewCoord=new glMat4();}
updateProjection(){if(model){let m=this.view.arr44,c=model.center.xyz,depthZ=-m[2]*c[0]-m[6]*c[1]-m[10]*c[2]-m[14];this.farPlane=depthZ+model.maxR*this.curZoom;this.nearPlane=depthZ-model.maxR*this.curZoom;}
this.projection.createOrtho(-canvas.width/2,canvas.width/2,-canvas.height/2,canvas.height/2,this.nearPlane,this.farPlane);}
updateDepth(){let off=Math.round(gl.drawingBufferHeight/2)*gl.drawingBufferWidth*4+Math.round(gl.drawingBufferWidth/2)*4,d=0;if(hover.pixels){let depthColor=hover.pixels.slice(off,off+4);d=hover.getID(depthColor)/hover.total_shift;}
if(d<=0||d>1){this.initCenter.copy(this.curCenter);return;}
let depthZ=d*this.farPlane+this.nearPlane*(1-d);this.curCenter.scaleAndAdd(this.curQ.zAxis,-depthZ/this.curZoom);this.view=glMat4.createView(this.curZoom,this.curCenter,this.curQ);this.updateProjection();this.updateView();this.initCenter.copy(this.curCenter);}
updateView(){this.view=glMat4.createView(this.curZoom,this.curCenter,this.curQ);this.PV=glMat4.multiply(this.projection,this.view);this.normMat.fromQuaternionNorm(this.curQ);this.viewCoord.fromQuaternionVC(this.curQ,this.viewSizeCoord);render.setMatrixUniforms();}
update(){if(this.isAnimate){this.animate();this.updateView();if(!this.isAnimate){this.needUpdate=false;render.noMovementUpdate();}
return false;}
if(this.needUpdateProjection==true){this.needUpdateProjection=false;this.updateProjection();}
if(this.needUpdate==true){if(glCameraMove.state==glCameraMove.ROTATE){this.curQ.from2AngleAxis(this.right,this.rotX,this.up,this.rotY);this.updateProjection();}
if(glCameraMove.state==glCameraMove.SPIN){this.curQ.fromAngleAxis(this.fwd,this.rotZ);this.curQ.multiply(this.quat);}
if(glCameraMove.state==glCameraMove.PAN){this.curCenter=glVec3.scaleAndAdd(this.initCenter,1,this.curQ.xAxis,-this.panX,this.curQ.yAxis,this.panY);}
if(glCameraMove.state==glCameraMove.ZOOM)
this.updateProjection();this.updateView();if(glCameraMove.isWheelZoom){glCameraMove.isWheelZoom=false;glCameraMove.set(glCameraMove.NONE);}}}
animate(){this.animateF+=0.05;if(this.animateF>=1.0){this.curQ.copy(this.animQ);this.curZoom=this.animZoom;this.updateProjection();this.curCenter.copy(this.animCenter);this.initCenter.copy(this.animCenter);this.right.copy(this.curQ.xAxis);this.up.copy(this.curQ.yAxis);this.fwd.copy(this.curQ.zAxis);this.isAnimate=false;this.animateF=0;return false;}
this.curQ=glQuat.slerp(this.initQ,this.animQ,this.animateF);this.curZoom=(1-this.animateF)*this.initZoom+this.animateF*this.animZoom;this.updateProjection();this.curCenter=glVec3.lerp(this.initCenter,this.animCenter,this.animateF);}
saveAnimateCameraStage(){this.rotX=0;this.rotY=0;this.rotZ=0;this.panX=0;this.panY=0;this.initQ.copy(this.curQ);this.initCenter.copy(this.curCenter);this.initZoom=this.curZoom;this.animQ.copy(this.curQ);this.animCenter.copy(this.curCenter);this.animZoom=this.curZoom;this.animateF=0;this.isAnimate=true;}
setViewTo(direction){switch(direction){case'Front':this.saveAnimateCameraStage();this.animQ.fromEuler([$glMath.PiOver2,0,-$glMath.PiOver2]);break;case'Back':this.saveAnimateCameraStage();this.animQ.fromEuler([$glMath.PiOver2,0,$glMath.PiOver2]);break;case'Left':this.saveAnimateCameraStage();this.animQ.fromEuler([$glMath.PiOver2,0,0]);break;case'Right':this.saveAnimateCameraStage();this.animQ.fromEuler([-$glMath.PiOver2,$glMath.PI,0]);break;case'Top':this.saveAnimateCameraStage();this.animQ.fromEuler([0,0,0]);break;case'Bottom':this.saveAnimateCameraStage();this.animQ.fromEuler([$glMath.PI,0,0]);break;case'ISO':this.saveAnimateCameraStage();this.animQ.fromEuler([$glMath.PiOver4,0,-$glMath.PI/6]);}}
fitZoom(){if(!model)return;let screenCoords=model.getScreenCoords(),maxX,minX,maxY,minY,off;for(const[key,node]of Object.entries(fmNodesDict)){if(node.groupShow&&node.show){off=node.glID*4;if(screenCoords[off]>maxX||!maxX)maxX=screenCoords[off];if(screenCoords[off]<minX||!minX)minX=screenCoords[off];if(screenCoords[off+1]>maxY||!maxY)maxY=screenCoords[off+1];if(screenCoords[off+1]<minY||!minY)minY=screenCoords[off+1];}}
let scale=Math.max((maxX-minX)/2,(maxY-minY)/2)*1.1,xOff=(maxX+minX)*canvas.width/this.curZoom/4,yOff=(maxY+minY)*canvas.height/this.curZoom/4;this.saveAnimateCameraStage();this.animCenter=glVec3.scaleAndAdd(this.curCenter,1,this.curQ.xAxis,xOff);this.animCenter.scaleAndAdd(this.curQ.yAxis,yOff);this.animZoom=this.curZoom/scale;}}
class glArrow{constructor(){this.vao=null;this.SMOOTH=12;this.CR=0.5;this.CL=12;this.HR=1.5;this.HL=5;this.count=null;this.origin=null;this.direction=null;this.color=null;this.size=1;this.value=null;this.coords=null;this.indices=[];this.normals=null;}
addArrow(){let inc=Math.PI*2.0/this.SMOOTH,ang=Math.atan(this.HR/this.HL),cN=Math.cos(ang),sN=Math.sin(ang),ip1,cor,vz=this.direction,vx=new glVec3(vz[2],-vz[0],vz[1]).normalize(),vy=glVec3.cross(vz,vx).normalize().xyz;vx=glVec3.cross(vy,vz).xyz;this.count=this.SMOOTH*12;this.coords=new Float32Array(this.SMOOTH*15+3);this.normals=new Float32Array(this.SMOOTH*15+3);for(let i=0;i<this.SMOOTH;i++){if(i==this.SMOOTH-1){ip1=0;}else{ip1=i+1;}
for(let j=0;j<3;j++){cor=Math.cos(i*inc)*vx[j]+Math.sin(i*inc)*vy[j];this.coords[i*3+j]=this.CR*cor;this.coords[i*3+this.SMOOTH*3+j]=this.CR*cor+vz[j]*this.CL;this.coords[i*3+this.SMOOTH*6+j]=this.HR*cor+vz[j]*this.CL;this.coords[i*3+this.SMOOTH*9+j]=this.HR*cor+vz[j]*this.CL;this.coords[i*3+this.SMOOTH*12+j]=vz[j]*(this.CL+this.HL);this.normals[i*3+j]=cor;this.normals[i*3+this.SMOOTH*3+j]=cor;this.normals[i*3+this.SMOOTH*6+j]=-vz[j];this.normals[i*3+this.SMOOTH*9+j]=cor*cN+vz[j]*sN;this.normals[i*3+this.SMOOTH*12+j]=cor*cN+vz[j]*sN;}
this.indices.push(i,ip1,ip1+this.SMOOTH,i,ip1+this.SMOOTH,i+this.SMOOTH,this.SMOOTH*5,ip1+this.SMOOTH*2,i+this.SMOOTH*2,this.SMOOTH*4+i,i+this.SMOOTH*3,ip1+this.SMOOTH*3);}
for(let j=0;j<3;j++){this.coords[this.SMOOTH*15+j]=this.CL*vz[j];this.normals[this.SMOOTH*15+j]=-vz[j];}}
addMomArrow(){let inc=Math.PI*2.0/this.SMOOTH,ang=Math.atan(this.HR/this.HL),cN=Math.cos(ang),sN=Math.sin(ang),ip1,cor,vz=this.direction,vx=new glVec3(vz[2],-vz[0],vz[1]).normalize(),vy=glVec3.cross(vz,vx).normalize().xyz;vx=glVec3.cross(vy,vz).xyz;this.count=this.SMOOTH*18;this.coords=new Float32Array(this.SMOOTH*27+3);this.normals=new Float32Array(this.SMOOTH*27+3);for(let i=0;i<this.SMOOTH;i++){if(i==this.SMOOTH-1){ip1=0;}else{ip1=i+1;}
for(let j=0;j<3;j++){cor=Math.cos(i*inc)*vx[j]+Math.sin(i*inc)*vy[j];this.coords[i*3+j]=this.CR*cor;this.coords[i*3+this.SMOOTH*3+j]=this.CR*cor+vz[j]*(this.CL-this.HL);this.coords[i*3+this.SMOOTH*6+j]=this.HR*cor+vz[j]*(this.CL-this.HL);this.coords[i*3+this.SMOOTH*9+j]=this.HR*cor+vz[j]*(this.CL-this.HL);this.coords[i*3+this.SMOOTH*12+j]=vz[j]*this.CL;this.coords[i*3+this.SMOOTH*15+j]=this.HR*cor+vz[j]*this.CL;this.coords[i*3+this.SMOOTH*18+j]=this.HR*cor+vz[j]*this.CL;this.coords[i*3+this.SMOOTH*21+j]=vz[j]*(this.CL+this.HL);this.normals[i*3+j]=cor;this.normals[i*3+this.SMOOTH*3+j]=cor;this.normals[i*3+this.SMOOTH*6+j]=-vz[j];this.normals[i*3+this.SMOOTH*9+j]=cor*cN+vz[j]*sN;this.normals[i*3+this.SMOOTH*12+j]=cor*cN+vz[j]*sN;this.normals[i*3+this.SMOOTH*15+j]=-vz[j];this.normals[i*3+this.SMOOTH*18+j]=cor*cN+vz[j]*sN;this.normals[i*3+this.SMOOTH*21+j]=cor*cN+vz[j]*sN;}
this.indices.push(i,ip1,ip1+this.SMOOTH,i,ip1+this.SMOOTH,i+this.SMOOTH,this.SMOOTH*8,ip1+this.SMOOTH*2,i+this.SMOOTH*2,this.SMOOTH*4+i,i+this.SMOOTH*3,ip1+this.SMOOTH*3,this.SMOOTH*9,ip1+this.SMOOTH*5,i+this.SMOOTH*5,this.SMOOTH*7+i,i+this.SMOOTH*6,ip1+this.SMOOTH*6);}
for(let j=0;j<3;j++){this.coords[this.SMOOTH*24+j]=vz[j]*(this.CL-this.HL);this.coords[this.SMOOTH*27+j]=vz[j]*this.CL;this.normals[this.SMOOTH*24+j]=-vz[j];this.normals[this.SMOOTH*27+j]=-vz[j];}}
initBuffers(){gl.useProgram(render.shaderAxis.program);let bufferCoords=gl.createBuffer();gl.bindBuffer(gl.ARRAY_BUFFER,bufferCoords);gl.bufferData(gl.ARRAY_BUFFER,this.coords,gl.STATIC_DRAW);let bufferNormals=gl.createBuffer();gl.bindBuffer(gl.ARRAY_BUFFER,bufferNormals);gl.bufferData(gl.ARRAY_BUFFER,this.normals,gl.STATIC_DRAW);this.vao=gl.createVertexArray();gl.bindVertexArray(this.vao);gl.bindBuffer(gl.ARRAY_BUFFER,bufferCoords);gl.enableVertexAttribArray(render.shaderAxis.aPosition);gl.vertexAttribPointer(render.shaderAxis.aPosition,3,gl.FLOAT,false,0,0);gl.bindBuffer(gl.ARRAY_BUFFER,bufferNormals);gl.enableVertexAttribArray(render.shaderAxis.aNormal);gl.vertexAttribPointer(render.shaderAxis.aNormal,3,gl.FLOAT,false,0,0);let bufferIndices=gl.createBuffer();gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,bufferIndices);gl.bufferData(gl.ELEMENT_ARRAY_BUFFER,new Uint8Array(this.indices),gl.STATIC_DRAW);gl.bindVertexArray(null);gl.deleteBuffer(bufferCoords);gl.deleteBuffer(bufferNormals);gl.deleteBuffer(bufferIndices);this.coords=[];this.indices=[];this.normals=[];}
draw(){gl.useProgram(render.shaderAxis.program);if(this.size==1.0){gl.uniform1f(render.shaderAxis.uSize,this.size);}else{gl.uniform1f(render.shaderAxis.uSize,camera.curZoom/3);}
gl.uniform4fv(render.shaderAxis.uOrigin,this.origin);gl.uniform3fv(render.shaderAxis.uColor,this.color);gl.bindVertexArray(this.vao);gl.drawElements(gl.TRIANGLES,this.count,gl.UNSIGNED_BYTE,0);gl.bindVertexArray(null);}}
class $cidAxis{constructor(){this.arrows=[];let xVec=new glArrow(),yVec=new glArrow(),zVec=new glArrow();xVec.origin=[0,0,0,1];xVec.direction=[1,0,0];xVec.color=[1,0,0];xVec.addArrow();xVec.initBuffers();yVec.origin=[0,0,0,1];yVec.direction=[0,1,0];yVec.color=[0,1,0];yVec.addArrow();yVec.initBuffers();zVec.origin=[0,0,0,1];zVec.direction=[0,0,1];zVec.color=[0,0.667,1];zVec.addArrow();zVec.initBuffers();this.arrows=[xVec,yVec,zVec];}
draw(){for(const arrow of this.arrows)
arrow.draw();}}
const vsModelSource=`#version 300 es
in vec4 aPosition;in vec4 aColor;in vec3 aNormal;in vec3 aBarycentric;in float aStage;uniform highp mat4 uPVMatrix;uniform highp mat3 uInvMatrix;uniform float uPointSize;out vec4 vColor;out vec3 vNormal;out vec3 vBarycentric;out float vStage;void main(){gl_PointSize=uPointSize;gl_Position=uPVMatrix*aPosition;if(gl_Position.w!=1.0&&gl_Position.w>0.001){gl_Position/=gl_Position.w;}
vNormal=uInvMatrix*aNormal;vBarycentric=aBarycentric;vStage=aStage;vColor=aColor;}`;const fsModelSource=`#version 300 es
precision mediump float;in vec4 vColor;in vec3 vNormal;in vec3 vBarycentric;in float vStage;uniform vec3 uColor;uniform vec4 uStrokeColor;uniform vec3 uLight;uniform float uShrink;uniform float uEdgeThick;uniform float uAlpha;uniform bool uShowEdges;uniform bool uShowLight;uniform bool uIsUniformColor;uniform bool uShowPoints;out vec4 oColor;float edgeFactor(vec3 barycentric,float lineWidth){vec3 dist=fwidth(barycentric);vec3 smoothed=smoothstep(dist*((lineWidth*0.5)-0.5),dist*((lineWidth*0.5)+0.5),barycentric);return 1.0-min(min(smoothed.x,smoothed.y),smoothed.z);}
void main(){float light,edge;vec4 inColor,inStrokeColor;float d=min(min(vBarycentric.x,vBarycentric.y),vBarycentric.z);if(!uShowPoints&&vStage==0.9){discard;}
if(uShrink>0.0&&d<uShrink||vStage<0.4){discard;}
if(vStage==0.8){inColor.rgb=vec3(0.97,0.83,0.6);inStrokeColor=vec4(1.0,0.65,0.2,1.0);}else if(vStage==0.7){inColor.rgb=vec3(0.95,0.55,0.15);}else if(vStage==0.6){inColor.rgb=vec3(1.0,0.5,0.1);}else{if(uIsUniformColor==true){inColor.rgb=uColor;}else{inColor.rgb=vColor.rgb;}
inStrokeColor=uStrokeColor;}
inColor.a=uAlpha;if(uShowEdges==true){edge=edgeFactor(vBarycentric-vec3(uShrink),uEdgeThick);oColor=mix(inColor,inStrokeColor,edge);}else{oColor=inColor;}
if(oColor.a==0.0){discard;}
if(uShowLight==true){if(!gl_FrontFacing){light=0.3+0.7*abs(dot(vNormal,uLight));}else{light=0.5+0.5*abs(dot(vNormal,uLight));}
oColor.rgb*=light;}}`;const vsSelectSource=`#version 300 es
in vec4 aPosition;in vec4 aColor;in vec3 aBarycentric;in float aStage;uniform highp mat4 uPVMatrix;uniform float uPointSize;out vec4 vColor;out vec3 vBarycentric;out vec4 vPosition;out float vStage;void main(){gl_PointSize=uPointSize;gl_Position=uPVMatrix*aPosition;vBarycentric=aBarycentric;vStage=aStage;vColor=aColor;}`;const fsSelectSource=`#version 300 es
precision mediump float;in vec4 vColor;in vec3 vBarycentric;in float vStage;uniform float uShrink;uniform float uWidth;uniform float uHeight;out vec4 oColor;void main(){if(vStage<0.4){discard;}
float d=min(min(vBarycentric.x,vBarycentric.y),vBarycentric.z);oColor=vColor;if(gl_FragCoord.x==uWidth+0.5&&gl_FragCoord.y==uHeight+0.5){float depth=floor(gl_FragCoord.z*4294967296.0);float r=floor(depth/16777216.0);depth-=r*16777216.0;float g=floor(depth/65536.0);depth-=g*65536.0;float b=floor(depth/256.0);depth-=b*256.0;float a=depth;oColor=vec4(r/255.0,g/255.0,b/255.0,a/255.0);}
if(uShrink>0.0&&d<uShrink){discard;}}`;const vsHoverSource=`#version 300 es
in vec4 aPosition;in vec3 aBarycentric;uniform highp mat4 uPVMatrix;uniform float uPointSize;out vec4 vColor;out vec3 vBarycentric;void main(){vec4 loc;gl_PointSize=uPointSize;loc=uPVMatrix*aPosition;if(loc.w>0.01){gl_Position=loc/loc.w;}else{gl_Position=loc;}
vBarycentric=aBarycentric;}`;const fsHoverSource=`#version 300 es
precision mediump float;in vec3 vBarycentric;uniform float uShrink;uniform vec4 uColor;out vec4 oColor;void main(){float d=min(min(vBarycentric.x,vBarycentric.y),vBarycentric.z);oColor=uColor;if(uShrink>0.0&&d<uShrink){discard;}}`;const vsAxisSource=`#version 300 es
in vec4 aPosition;in vec3 aNormal;uniform highp mat4 uRotMatrix;uniform highp mat4 uPVMatrix;uniform highp mat3 uInvMatrix;uniform float uSize;uniform highp vec4 uOrigin;out vec3 vNormal;void main(){vec4 loc;if(uSize==1.0){gl_Position=uRotMatrix*aPosition;}else{loc=vec4(aPosition.xyz/uSize,0.0);gl_Position=uPVMatrix*loc+uPVMatrix*uOrigin;}
vNormal=uInvMatrix*aNormal;}`;const fsAxisSource=`#version 300 es
precision mediump float;in vec3 vNormal;uniform vec3 uColor;uniform vec3 uLight;out vec4 oColor;void main(){float light=0.5+0.5*dot(vNormal,uLight);oColor.rgb=uColor.rgb*light;oColor.a=1.0;}`;class $glText{constructor(){this.screenCoords=[];this.nodeText=[];this.nodeCoords=[];this.elmText=[];this.elmCoords=[];this.measureText=[];this.measureCoords=[];this.elmPropText=[];this.elmPropCoords=[];this.vectorText=[];this.needUpdate=true;}
updateLocations(){let off=0;this.needUpdate=true;let count=this.nodeText.length+this.elmText.length+this.measureText.length+this.elmPropText.length+this.vectorText.length;if(count<1)
return;this.screenCoords=new Float32Array(count*4);let coords=new Float32Array(count*3);if(this.nodeCoords){coords.append(this.nodeCoords,off);off+=this.nodeCoords.length;}
if(this.elmCoords){coords.append(this.elmCoords,off);off+=this.elmCoords.length;}
if(this.measureCoords){coords.append(this.measureCoords,off);off+=this.measureCoords.length;}
if(this.elmPropCoords){coords.append(this.elmPropCoords,off);off+=this.elmPropCoords.length;}
if(this.vectorText){fmVectors.getTextCoords(coords,off);}
gl.useProgram(render.shaderModel.program);let bufferCoordsTrans=gl.createBuffer();gl.bindBuffer(gl.ARRAY_BUFFER,bufferCoordsTrans);gl.bufferData(gl.ARRAY_BUFFER,this.screenCoords,gl.STREAM_READ);gl.bindBuffer(gl.ARRAY_BUFFER,null);gl.bindTransformFeedback(gl.TRANSFORM_FEEDBACK,render.tf);gl.bindBufferBase(gl.TRANSFORM_FEEDBACK_BUFFER,0,bufferCoordsTrans);gl.beginTransformFeedback(gl.POINTS);let bufferCoords=gl.createBuffer();gl.bindBuffer(gl.ARRAY_BUFFER,bufferCoords);gl.bufferData(gl.ARRAY_BUFFER,coords,gl.STATIC_DRAW);gl.enableVertexAttribArray(render.shaderModel.aPosition);gl.vertexAttribPointer(render.shaderModel.aPosition,3,gl.FLOAT,false,0,0);gl.enable(gl.RASTERIZER_DISCARD);gl.drawArrays(gl.POINTS,0,count);gl.endTransformFeedback();gl.disable(gl.RASTERIZER_DISCARD);gl.finish();gl.getBufferSubData(gl.TRANSFORM_FEEDBACK_BUFFER,0,this.screenCoords);gl.bindBufferBase(gl.TRANSFORM_FEEDBACK_BUFFER,0,null);gl.bindBuffer(gl.ARRAY_BUFFER,null);gl.deleteBuffer(bufferCoordsTrans);gl.deleteBuffer(bufferCoords);}
drawText(){let start=0;if(glCameraMove.state!=glCameraMove.NONE){this.needUpdate=true;}
if(!this.needUpdate){return;}
if(glCameraMove.state==glCameraMove.NONE){this.needUpdate=false;}
ctx.clearRect(0,0,ctx.canvas.width,ctx.canvas.height);ctx.save();ctx.font="16px Arial";if(glCameraMove.state==glCameraMove.NONE){ctx.fillStyle='rgb(255, 125, 0)';start+=this.drawArrText(start,this.nodeText);ctx.fillStyle='rgb(255, 255, 0)';start+=this.drawArrText(start,this.elmText);ctx.fillStyle='rgb(255, 0, 0)';start+=this.drawArrText(start,this.measureText);ctx.fillStyle='rgb(255, 0, 150)';start+=this.drawArrText(start,this.elmPropText);ctx.fillStyle='rgb(255, 0, 0)';start+=this.drawArrText(start,this.vectorText);}
let x=camera.curQ.xAxis.xyz,y=camera.curQ.yAxis.xyz;ctx.font="14px Arial";ctx.translate(77,ctx.canvas.height-55);ctx.font="14px Arial";ctx.fillStyle='rgb(255,0,0)';ctx.fillText("X",x[0]*50,-y[0]*50);ctx.fillStyle='rgb(0,255,0)';ctx.fillText("Y",x[1]*50,-y[1]*50);ctx.fillStyle='rgb(0,170,255)';ctx.fillText("Z",x[2]*50,-y[2]*50);ctx.restore();}
drawArrText(start,arr){let x,y,off=0;for(let i=0;i<arr.length;i++){off=start+i*4;x=this.screenCoords[off];y=this.screenCoords[off+1];if(x.between(-1,1)&&y.between(-1,1)){ctx.fillText(arr[i],(x+1)/2*ctx.canvas.width,(1-y)/2*ctx.canvas.height);}}
return arr.length*4;}
drawSelect(){csel.clearRect(0,0,csel.canvas.width,csel.canvas.height);csel.save();if(MouseState.hold){csel.beginPath();csel.strokeStyle='rgb(255, 125, 0)';csel.rect(MouseState.prevX,MouseState.prevY,MouseState.x-MouseState.prevX,MouseState.y-MouseState.prevY);csel.stroke();}
csel.restore();}}
const glText=new $glText();const glRenderStyle={SHADED:0,FLAT:1,TRANSPARENT:2,WIREFRAME:3,};class $glRender{constructor(){this.backgroundColor=[0.133,0.153,0.196,1.0];this.howShow=glRenderStyle.SHADED;this.showNodes=false;this.nodeSize=5.0;this.nodeSelectSize=20.0;this.nodeHoverSize=10.0;this.showEdges=true;this.edgeThickness=0.7;this.shrink=false;this.shrinkLevel=0.1;this.light=new glVec3(0.5,0.7,1.0).normalize().xyz;this.axisLight=new glVec3(0.5,0.7,1.0).normalize().xyz;this.alpha=1.0;this.hoverColor=[1,0.5,0,1];this.measureColor=[1,0,0,1];this.nodeMeasureSize=3.0;this.shaderAxis=null;this.shaderHover=null;this.shaderSelect=null;this.shaderModel=null;this.selectTexture=null;this.depthTexture=null;this.selectFramebuffer=null;this.tf=null;this.initPrograms();this.initSelection();gl.enable(gl.DEPTH_TEST);gl.depthFunc(gl.LEQUAL);gl.enable(gl.BLEND);gl.blendFunc(gl.SRC_ALPHA,gl.ONE_MINUS_SRC_ALPHA);gl.enable(gl.POLYGON_OFFSET_FILL);gl.polygonOffset(1,0);}
initSelection(){this.selectTexture=gl.createTexture();gl.bindTexture(gl.TEXTURE_2D,this.selectTexture);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,gl.NEAREST);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MAG_FILTER,gl.NEAREST);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_S,gl.CLAMP_TO_EDGE);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_T,gl.CLAMP_TO_EDGE);this.depthTexture=gl.createTexture();gl.bindTexture(gl.TEXTURE_2D,this.depthTexture);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MAG_FILTER,gl.NEAREST);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_MIN_FILTER,gl.NEAREST);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_S,gl.CLAMP_TO_EDGE);gl.texParameteri(gl.TEXTURE_2D,gl.TEXTURE_WRAP_T,gl.CLAMP_TO_EDGE);this.selectFramebuffer=gl.createFramebuffer();gl.bindFramebuffer(gl.FRAMEBUFFER,this.selectFramebuffer);gl.framebufferTexture2D(gl.FRAMEBUFFER,gl.COLOR_ATTACHMENT0,gl.TEXTURE_2D,this.selectTexture,0);gl.framebufferTexture2D(gl.FRAMEBUFFER,gl.DEPTH_ATTACHMENT,gl.TEXTURE_2D,this.depthTexture,0);gl.bindFramebuffer(gl.FRAMEBUFFER,null);}
initPrograms(){this.initAxisProgram();this.initHoverProgram();this.initSelectProgram();this.initViewProgram();}
initAxisProgram(){let glProgram=this.createProgram(vsAxisSource,fsAxisSource);this.shaderAxis={program:glProgram,aPosition:gl.getAttribLocation(glProgram,'aPosition'),aNormal:gl.getAttribLocation(glProgram,'aNormal'),uRotMatrix:gl.getUniformLocation(glProgram,'uRotMatrix'),uPVMatrix:gl.getUniformLocation(glProgram,'uPVMatrix'),uInvMatrix:gl.getUniformLocation(glProgram,'uInvMatrix'),uOrigin:gl.getUniformLocation(glProgram,'uOrigin'),uSize:gl.getUniformLocation(glProgram,'uSize'),uColor:gl.getUniformLocation(glProgram,'uColor'),uLight:gl.getUniformLocation(glProgram,'uLight'),};gl.useProgram(this.shaderAxis.program);gl.uniform3fv(this.shaderAxis.uLight,this.axisLight);}
initHoverProgram(){let glProgram=this.createProgram(vsHoverSource,fsHoverSource);this.shaderHover={program:glProgram,aPosition:gl.getAttribLocation(glProgram,'aPosition'),aBarycentric:gl.getAttribLocation(glProgram,'aBarycentric'),uPVMatrix:gl.getUniformLocation(glProgram,'uPVMatrix'),uShrink:gl.getUniformLocation(glProgram,'uShrink'),uPointSize:gl.getUniformLocation(glProgram,'uPointSize'),uColor:gl.getUniformLocation(glProgram,'uColor'),};}
initSelectProgram(){let glProgram=this.createProgram(vsSelectSource,fsSelectSource);this.shaderSelect={program:glProgram,aPosition:gl.getAttribLocation(glProgram,'aPosition'),aColor:gl.getAttribLocation(glProgram,'aColor'),aBarycentric:gl.getAttribLocation(glProgram,'aBarycentric'),aStage:gl.getAttribLocation(glProgram,'aStage'),uPVMatrix:gl.getUniformLocation(glProgram,'uPVMatrix'),uShrink:gl.getUniformLocation(glProgram,'uShrink'),uPointSize:gl.getUniformLocation(glProgram,'uPointSize'),uWidth:gl.getUniformLocation(glProgram,'uWidth'),uHeight:gl.getUniformLocation(glProgram,'uHeight')};gl.useProgram(this.shaderSelect.program);gl.uniform1f(this.shaderSelect.uPointSize,this.nodeSelectSize);}
initViewProgram(){let glProgram=this.createProgram(vsModelSource,fsModelSource,true);this.shaderModel={program:glProgram,aPosition:gl.getAttribLocation(glProgram,'aPosition'),aColor:gl.getAttribLocation(glProgram,'aColor'),aNormal:gl.getAttribLocation(glProgram,'aNormal'),aBarycentric:gl.getAttribLocation(glProgram,'aBarycentric'),aStage:gl.getAttribLocation(glProgram,'aStage'),uPVMatrix:gl.getUniformLocation(glProgram,'uPVMatrix'),uInvMatrix:gl.getUniformLocation(glProgram,'uInvMatrix'),uColor:gl.getUniformLocation(glProgram,'uColor'),uStrokeColor:gl.getUniformLocation(glProgram,'uStrokeColor'),uLight:gl.getUniformLocation(glProgram,'uLight'),uShrink:gl.getUniformLocation(glProgram,'uShrink'),uEdgeThick:gl.getUniformLocation(glProgram,'uEdgeThick'),uShowEdges:gl.getUniformLocation(glProgram,'uShowEdges'),uShowLight:gl.getUniformLocation(glProgram,'uShowLight'),uPointSize:gl.getUniformLocation(glProgram,'uPointSize'),uShowPoints:gl.getUniformLocation(glProgram,'uShowPoints'),uAlpha:gl.getUniformLocation(glProgram,'uAlpha'),uIsUniformColor:gl.getUniformLocation(glProgram,'uIsUniformColor')};gl.useProgram(this.shaderModel.program);gl.uniform1f(this.shaderModel.uEdgeThick,this.edgeThickness);gl.uniform1f(this.shaderModel.uPointSize,this.nodeSize);gl.uniform1f(this.shaderModel.uAlpha,this.alpha);gl.uniform1f(this.shaderModel.uShowPoints,this.showNodes);gl.uniform3fv(this.shaderModel.uLight,this.light);}
drawScene(){this.computeFps();gl.clearColor(...this.backgroundColor);gl.clearDepth(1.0);gl.clear(gl.COLOR_BUFFER_BIT|gl.DEPTH_BUFFER_BIT);gl.viewport(0,0,canvas.width,canvas.height);camera.update();if(model){gl.useProgram(this.shaderModel.program);if(this.howShow==glRenderStyle.TRANSPARENT){gl.depthFunc(gl.ALWAYS);model.draw();gl.depthFunc(gl.LEQUAL);model.draw();}else{model.draw();}
if(glCameraMove.state==glCameraMove.NONE){hover.draw();measure.draw();}}
for(const arrow of fmVectors.arrows){arrow.draw();}
gl.viewport(20,20,100,100);cidAxis.draw();glText.drawSelect();glText.drawText();animationID=requestAnimationFrame(this.drawScene.bind(this));}
noMovementUpdate(){this.setSelectMatrixUniforms();this.drawSelectScene();glText.updateLocations();}
drawSelectScene(){if(model){let cWidth=Math.round(gl.drawingBufferWidth/2),cHeight=Math.round(gl.drawingBufferHeight/2);gl.useProgram(this.shaderSelect.program);gl.bindFramebuffer(gl.FRAMEBUFFER,this.selectFramebuffer);gl.viewport(0,0,canvas.width,canvas.height);gl.bindTexture(gl.TEXTURE_2D,this.selectTexture);gl.texImage2D(gl.TEXTURE_2D,0,gl.RGBA,canvas.width,canvas.height,0,gl.RGBA,gl.UNSIGNED_BYTE,null);gl.bindTexture(gl.TEXTURE_2D,this.depthTexture);gl.texImage2D(gl.TEXTURE_2D,0,gl.DEPTH_COMPONENT24,canvas.width,canvas.height,0,gl.DEPTH_COMPONENT,gl.UNSIGNED_INT,null);gl.clearColor(0,0,0,0);gl.clearDepth(1.0);gl.clear(gl.COLOR_BUFFER_BIT|gl.DEPTH_BUFFER_BIT);gl.uniform1f(this.shaderSelect.uWidth,cWidth);gl.uniform1f(this.shaderSelect.uHeight,cHeight);gl.disable(gl.BLEND);model.drawSelect();gl.enable(gl.BLEND);hover.pixels=new Uint8Array(gl.drawingBufferWidth*gl.drawingBufferHeight*4);gl.readPixels(0,0,gl.drawingBufferWidth,gl.drawingBufferHeight,gl.RGBA,gl.UNSIGNED_BYTE,hover.pixels);gl.bindFramebuffer(gl.FRAMEBUFFER,null);}}
setMatrixUniforms(){gl.useProgram(this.shaderModel.program);gl.uniformMatrix4fv(this.shaderModel.uPVMatrix,false,camera.PV.arr44);if(this.howShow==glRenderStyle.SHADED){gl.uniformMatrix3fv(this.shaderModel.uInvMatrix,false,camera.normMat.arr33);}
gl.useProgram(this.shaderAxis.program);gl.uniformMatrix4fv(this.shaderAxis.uPVMatrix,false,camera.PV.arr44);gl.uniformMatrix4fv(this.shaderAxis.uRotMatrix,false,camera.viewCoord.arr44);gl.uniformMatrix3fv(this.shaderAxis.uInvMatrix,false,camera.normMat.arr33);}
setSelectMatrixUniforms(){gl.useProgram(this.shaderSelect.program);gl.uniformMatrix4fv(this.shaderSelect.uPVMatrix,false,camera.PV.arr44);gl.useProgram(this.shaderHover.program);gl.uniformMatrix4fv(this.shaderHover.uPVMatrix,false,camera.PV.arr44);}
setRenderStyle(style){switch(style){case'Shaded':this.howShow=glRenderStyle.SHADED;this.alpha=1.0;break;case'Flat':this.howShow=glRenderStyle.FLAT;this.alpha=1.0;break;case'Transparent':this.howShow=glRenderStyle.TRANSPARENT;this.alpha=0.5;break;case'Wireframe':this.howShow=glRenderStyle.WIREFRAME;this.alpha=0.0;break;}}
toggleNodeShow(){this.showNodes=!this.showNodes;gl.useProgram(this.shaderModel.program);gl.uniform1f(this.shaderModel.uShowPoints,this.showNodes);}
toggleEdgeShow(){this.showEdges=!this.showEdges;}
toggleBackground(){this.backgroundColor=this.backgroundColor[0]==0.133?[1,1,1,1]:[0.133,0.153,0.196,1.0];}
toggleElmShrink(){this.shrink=!this.shrink;this.drawSelectScene();gl.useProgram(this.shaderModel.program);if(this.shrink==true){gl.uniform1f(this.shaderModel.uEdgeThick,this.edgeThickness*2);}else{gl.uniform1f(this.shaderModel.uEdgeThick,this.edgeThickness);}}
createShader(type,source){let shader=gl.createShader(type);gl.shaderSource(shader,source);gl.compileShader(shader);let success=gl.getShaderParameter(shader,gl.COMPILE_STATUS);if(success){return shader;}
console.log(gl.getShaderInfoLog(shader));gl.deleteShader(shader);}
createProgram(vsShaderSource,fsShaderSource,addTransform=false){let vertexShader=this.createShader(gl.VERTEX_SHADER,vsShaderSource);let fragmentShader=this.createShader(gl.FRAGMENT_SHADER,fsShaderSource);let glProgram=gl.createProgram();gl.attachShader(glProgram,vertexShader);gl.attachShader(glProgram,fragmentShader);if(addTransform==true){this.tf=gl.createTransformFeedback();gl.bindTransformFeedback(gl.TRANSFORM_FEEDBACK,this.tf);gl.transformFeedbackVaryings(glProgram,['gl_Position'],gl.SEPARATE_ATTRIBS);}
gl.linkProgram(glProgram);if(!gl.getProgramParameter(glProgram,gl.LINK_STATUS)){alert('Could not initialise shaders');}
return glProgram;}
computeFps(){timeNow=new Date().getTime();fps++;if(timeNow-timeLast>=1000){document.getElementById("FPS").innerHTML="FPS: "+Number(fps*1000.0/(timeNow-timeLast)).toPrecision(5);timeLast=timeNow;fps=0;}}}
var timeNow=0;var fps=0;var timeLast=0;var KeyboardState={Shift:false,Ctrl:false};var MouseState={x:0,y:0,dX:0,dY:0,prevX:0,prevY:0,hold:false,};var mouseDown=false;var lastMouseX=null;var lastMouseY=null;function initListeners(){document.addEventListener('keydown',function(e){if(e.keyCode==16){KeyboardState.Shift=true;}else if(e.keyCode==17){KeyboardState.Ctrl=true;}});document.addEventListener('keyup',function(e){if(e.keyCode==16){KeyboardState.Shift=false;}else if(e.keyCode==17){KeyboardState.Ctrl=false;}});window.addEventListener('resize',reportWindowSize);document.onmouseup=handleDocMouseUp;document.onmousemove=handleDocMouseMove;selectCanvas.onmousedown=handleMouseDown;selectCanvas.onmousemove=handleMouseMove;window.addEventListener('wheel',MouseWheelHandler,{passive:false});}
function reportWindowSize(){canvas.width=canvas.clientWidth;canvas.height=canvas.clientHeight;textCanvas.width=textCanvas.clientWidth;textCanvas.height=textCanvas.clientHeight;selectCanvas.width=textCanvas.clientWidth;selectCanvas.height=textCanvas.clientHeight;camera.updateProjection();camera.updateView();render.noMovementUpdate();}
function handleMouseDown(event){mouseDown=true;if(selection.textBox){event.preventDefault();event.stopPropagation();}
switch(event.button){case 0:MouseState.prevX=event.clientX;MouseState.prevY=event.clientY-ribbon.height;MouseState.LeftButtonDown=true;break;case 1:MouseState.prevX=event.clientX;MouseState.prevY=event.clientY;MouseState.MiddleButtonDown=true;break;}}
function handleDocMouseUp(event){mouseDown=false;switch(event.button){case 0:MouseState.LeftButtonDown=false;if(MouseState.hold){selection.multiSelection();MouseState.hold=false;}
break;case 1:glCameraMove.set(glCameraMove.NONE);MouseState.MiddleButtonDown=false;break;case 2:MouseState.RightButtonDown=false;break;}}
function handleDocMouseMove(event){if(MouseState.hold){MouseState.x=event.clientX;MouseState.y=event.clientY-ribbon.height;}}
function handleMouseMove(event){if(!mouseDown||!MouseState.MiddleButtonDown){MouseState.x=event.clientX;MouseState.y=event.clientY-ribbon.height;if(MouseState.LeftButtonDown&&!MouseState.hold&&Math.abs(MouseState.prevX-MouseState.x)>3&&Math.abs(MouseState.prevY-MouseState.y)>3){hover.clear();MouseState.hold=true;}
if(!MouseState.hold){hover.mouseHover();}
return;}
MouseState.dX=event.clientX-MouseState.prevX;MouseState.dY=event.clientY-MouseState.prevY;MouseState.prevX=event.clientX;MouseState.prevY=event.clientY;if(KeyboardState.Shift==true&&KeyboardState.Ctrl==true){glCameraMove.set(glCameraMove.SPIN);camera.rotZ-=MouseState.dX*$glMath.PI180;}else if(KeyboardState.Shift==true){glCameraMove.set(glCameraMove.PAN);camera.panX+=MouseState.dX/camera.curZoom;camera.panY+=MouseState.dY/camera.curZoom;}else if(KeyboardState.Ctrl==true){glCameraMove.set(glCameraMove.ZOOM);camera.curZoom-=MouseState.dY*camera.curZoom/200;}else{glCameraMove.set(glCameraMove.ROTATE);camera.rotX-=MouseState.dY*$glMath.PI180;camera.rotY-=MouseState.dX*$glMath.PI180;}}
function MouseWheelHandler(e){let delta=e.wheelDelta/120;if(!delta)
delta=e.deltaY/10;if(KeyboardState.Ctrl)
e.preventDefault();if(tree.module.classList.contains('hovered')==true){tree.table.scrollTop+=10*delta;}else{glCameraMove.isWheelZoom=true;glCameraMove.set(glCameraMove.ZOOM);camera.curZoom-=delta*(camera.curZoom/10);}}
class $glHover{constructor(){this.red_scale=Math.pow(2,gl.getParameter(gl.RED_BITS));this.green_scale=Math.pow(2,gl.getParameter(gl.GREEN_BITS));this.blue_scale=Math.pow(2,gl.getParameter(gl.BLUE_BITS));this.alpha_scale=Math.pow(2,gl.getParameter(gl.ALPHA_BITS));this.total_shift=Math.pow(2,gl.getParameter(gl.RED_BITS)+gl.getParameter(gl.GREEN_BITS)+gl.getParameter(gl.BLUE_BITS)+gl.getParameter(gl.ALPHA_BITS));this.red_shift=Math.pow(2,gl.getParameter(gl.GREEN_BITS)+gl.getParameter(gl.BLUE_BITS)+gl.getParameter(gl.ALPHA_BITS));this.green_shift=Math.pow(2,gl.getParameter(gl.BLUE_BITS)+gl.getParameter(gl.ALPHA_BITS));this.blue_shift=Math.pow(2,gl.getParameter(gl.ALPHA_BITS));this.pixels=null;this.item=null;this.id=null;this.type=null;this.vao=null;this.coords=new Float32Array(18);this.barycentric=null;this.bufferCoords=null;this.bufferBarycentric=null;this.vao=gl.createVertexArray();gl.bindVertexArray(this.vao);this.bufferCoords=gl.createBuffer();gl.bindBuffer(gl.ARRAY_BUFFER,this.bufferCoords);gl.enableVertexAttribArray(render.shaderHover.aPosition);gl.vertexAttribPointer(render.shaderHover.aPosition,3,gl.FLOAT,false,0,0);this.bufferBarycentric=gl.createBuffer();gl.bindBuffer(gl.ARRAY_BUFFER,this.bufferBarycentric);gl.enableVertexAttribArray(render.shaderHover.aBarycentric);gl.vertexAttribPointer(render.shaderHover.aBarycentric,3,gl.FLOAT,false,0,0);gl.bindVertexArray(null);selectCanvas.onmouseup=this.onHoverMouseUp;}
getID(inpC){return(inpC[0]*this.red_shift+inpC[1]*this.green_shift+inpC[2]*this.blue_shift+inpC[3]);}
createColor(id){let r=Math.floor(id/this.red_shift);id-=r*this.red_shift;let g=Math.floor(id/this.green_shift);id-=g*this.green_shift;let b=Math.floor(id/this.blue_shift);id-=b*this.blue_shift;let a=id;return[r/(this.red_scale-1),g/(this.green_scale-1),b/(this.blue_scale-1),a/(this.alpha_scale-1)];}
mouseHover(){if(!model)return;let off=(gl.drawingBufferHeight-MouseState.y)*gl.drawingBufferWidth*4+MouseState.x*4,hoverIndex=this.getID(this.pixels.slice(off,off+4));if(hoverIndex>0){let id=Math.floor(hoverIndex/10),type=hoverIndex%10,bufferLen=type==4?(type+2)*3:type*3;if(!selection.isPassFilter(type)){return;}
if(id!=this.id||type!=this.type){this.id=id;this.type=type;if(type==1){this.item=fmNodesDict[id];this.coords.append(this.item.coords.xyz,0);}else{this.item=fmElemsDict[id];this.coords.append(this.item.glCoords,0);}
switch(type){case 1:this.barycentric=BARYCENTRIC.NODE;break;case 2:this.barycentric=BARYCENTRIC.BAR;break;case 3:this.barycentric=BARYCENTRIC.TRIA;break;case 4:this.barycentric=BARYCENTRIC.QUAD;}
gl.bindBuffer(gl.ARRAY_BUFFER,this.bufferCoords);gl.bufferData(gl.ARRAY_BUFFER,this.coords,gl.DYNAMIC_DRAW,0,bufferLen);gl.bindBuffer(gl.ARRAY_BUFFER,this.bufferBarycentric);gl.bufferData(gl.ARRAY_BUFFER,this.barycentric,gl.DYNAMIC_DRAW);}}else{this.clear();}}
draw(){gl.useProgram(render.shaderHover.program);gl.uniform1f(render.shaderHover.uPointSize,render.nodeHoverSize);gl.uniform4fv(render.shaderHover.uColor,render.hoverColor);if(render.shrink==true){gl.uniform1f(render.shaderHover.uShrink,render.shrinkLevel);}else{gl.uniform1f(render.shaderHover.uShrink,0.0);}
gl.bindVertexArray(this.vao);switch(this.type){case 1:gl.depthFunc(gl.ALWAYS);gl.drawArrays(gl.POINTS,0,1);gl.depthFunc(gl.LEQUAL);break;case 2:gl.drawArrays(gl.LINES,0,2);break;case 3:gl.drawArrays(gl.TRIANGLES,0,3);break;case 4:gl.drawArrays(gl.TRIANGLES,0,6);break;}}
leftClick(){if(!this.item&&selection.textBox)
selection.textBox.blur();if(!model||!this.item||!selection.textBox){return;}
if(!KeyboardState.Shift){selection.selectList=new fmList();}
if(selection.filter==selectFilter.NONE||selection.filter==selectFilter.NODES){if(this.type==1)
selection.selectList.nodeArr.push(this.item);}
if(selection.filter==selectFilter.NONE||selection.filter>selectFilter.NODES&&selection.isPassFilter(this.item.nodeCount)){if(this.type>1)
selection.selectList.elmArr.push(this.item);}
selection.setTextBox();}
clear(){this.id=null;this.type=null;this.item=null;}
onHoverMouseUp(event){if(event.button==0&&!MouseState.hold){if(selection.textBox){hover.leftClick();}}}}
const selectFilter={NONE:0,NODES:1,BARS:2,TRIAS:3,QUADS:4,ELEMENTS:5,SHELLS:6};class $glSelection{constructor(){this.filter=selectFilter.NONE;this.screenCoords=null;this.textBox=null;this.selectList=new fmList();}
multiSelection(){let rX1=Math.min(MouseState.prevX,MouseState.x)/canvas.width*2-1,rY1=-Math.max(MouseState.prevY,MouseState.y)/canvas.height*2+1,rX2=Math.max(MouseState.prevX,MouseState.x)/canvas.width*2-1,rY2=-Math.min(MouseState.prevY,MouseState.y)/canvas.height*2+1,off;if(!model){return;}
if(!KeyboardState.Shift){this.selectList=new fmList();}
this.screenCoords=model.getScreenCoords();if(this.filter==selectFilter.NONE||this.filter==selectFilter.NODES){for(const[key,node]of Object.entries(fmNodesDict)){if(node.groupShow&&node.show){off=node.glID*4;if(this.screenCoords[off].between(rX1,rX2)&&this.screenCoords[off+1].between(rY1,rY2)){this.selectList.nodeArr.push(node);}}}}
if(this.filter==selectFilter.NONE||this.filter>selectFilter.NODES){for(const[key,elm]of Object.entries(fmElemsDict)){if(elm.groupShow&&elm.show){if(!this.isPassFilter(elm.nodeCount)){continue;}
if(this.elmIntersect(elm,rX1,rX2,rY1,rY2)){this.selectList.elmArr.push(elm);}}}}
this.screenCoords=[];this.setTextBox();}
setTextBox(){if(this.textBox){this.clearSelection(false);this.setSelection();this.textBox.value='';if(this.selectList.nodeArr.length){this.selectList.fromArr();this.textBox.value='Node'+this.selectList.nodeList;}
if(this.selectList.elmArr.length){if(this.textBox.value)
this.textBox.value+=' ';this.selectList.fromArr(false);this.textBox.value+='Element'+this.selectList.elmList;}
this.textBox.scrollLeft=this.textBox.scrollWidth;this.textBox.setSelectionRange(this.textBox.value.length,this.textBox.value.length);}}
elmIntersect(elm,rX1,rX2,rY1,rY2){let off,x=[],y=[],rX=[rX1,rX2,rX2,rX1,rX1],rY=[rY1,rY1,rY2,rY2,rY1];for(let i=0;i<elm.nodeCount;i++){off=elm.con[i].glID*4;x.push(this.screenCoords[off]);y.push(this.screenCoords[off+1]);if(x[i].between(rX1,rX2)&&y[i].between(rY1,rY2)){return true;}}
if(elm.nodeCount>2){off=elm.con[0].glID*4;x.push(this.screenCoords[off]);y.push(this.screenCoords[off+1]);for(let i=0;i<4;i++){if(this.pointInside(rX[i],rY[i],x,y)){return true;}}}
for(let i=0;i<x.length-1;i++){for(let j=0;j<4;j++){if(this.linesIntersect(x[i],y[i],x[i+1],y[i+1],rX[j],rY[j],rX[j+1],rY[j+1])){return true;}}}
return false;}
linesIntersect(x1,y1,x2,y2,x3,y3,x4,y4){let d=(x1-x2)*(y3-y4)-(y1-y2)*(x3-x4);if(d==0){return false;}
let t=((x1-x3)*(y3-y4)-(y1-y3)*(x3-x4))/d;let u=-((x1-x2)*(y1-y3)-(y1-y2)*(x1-x3))/d;return t.between(0,1)&&u.between(0,1);}
pointInside(x1,y1,x,y){let s,s0;for(let i=0;i<x.length-1;i++){s=this.sign(x1,y1,x[i],y[i],x[i+1],y[i+1]);if(s==0){return false;}
if(i==0){s0=s;}else if(s*s0<0){return false;}}
return true;}
sign(x1,y1,x2,y2,x3,y3){return(x1-x3)*(y2-y3)-(x2-x3)*(y1-y3);}
setSelection(){for(const node of this.selectList.nodeArr){node.select=true;node.setStage();}
for(const elm of this.selectList.elmArr){elm.select=true;elm.setStage();}
if(model)
model.updateStages();}
clearSelection(update=true){for(const[key,node]of Object.entries(fmNodesDict)){node.select=false;node.setStage();}
for(const[key,elm]of Object.entries(fmElemsDict)){elm.select=false;elm.setStage();}
if(update&&model)
model.updateStages();}
isPassFilter(inpType){if(this.filter==selectFilter.NONE){return true;}else if(this.filter==inpType){return true;}else if(this.filter==selectFilter.ELEMENTS&&inpType>1){return true;}else if(this.filter==selectFilter.SHELLS&&(inpType==3||inpType==4)){return true;}else{return false;}}}
class $glMeasurements{constructor(){this.lineVao=null;this.lineBufferCoords=null;this.lineCoords=new Float32Array();this.pointVao=null;this.pointBufferCoords=null;this.pointCoords=new Float32Array();this.pointVao=gl.createVertexArray();gl.bindVertexArray(this.pointVao);this.pointBufferCoords=gl.createBuffer();gl.bindBuffer(gl.ARRAY_BUFFER,this.pointBufferCoords);gl.enableVertexAttribArray(render.shaderHover.aPosition);gl.vertexAttribPointer(render.shaderHover.aPosition,3,gl.FLOAT,false,0,0);this.lineVao=gl.createVertexArray();gl.bindVertexArray(this.lineVao);this.lineBufferCoords=gl.createBuffer();gl.bindBuffer(gl.ARRAY_BUFFER,this.lineBufferCoords);gl.enableVertexAttribArray(render.shaderHover.aPosition);gl.vertexAttribPointer(render.shaderHover.aPosition,3,gl.FLOAT,false,0,0);gl.bindVertexArray(null);}
addLine(p1,p2){this.lineCoords=this.lineCoords.concat(p1.xyz||p1,p2.xyz||p2);gl.bindBuffer(gl.ARRAY_BUFFER,this.lineBufferCoords);gl.bufferData(gl.ARRAY_BUFFER,this.lineCoords,gl.DYNAMIC_DRAW);}
addPoint(p){this.pointCoords=this.pointCoords.concat(p.xyz||p);gl.bindBuffer(gl.ARRAY_BUFFER,this.pointBufferCoords);gl.bufferData(gl.ARRAY_BUFFER,this.pointCoords,gl.DYNAMIC_DRAW);}
draw(){gl.useProgram(render.shaderHover.program);gl.uniform1f(render.shaderHover.uPointSize,render.nodeMeasureSize);gl.uniform4fv(render.shaderHover.uColor,render.measureColor);gl.uniform1f(render.shaderHover.uShrink,0.0);gl.depthFunc(gl.ALWAYS);if(this.lineCoords.length>0){gl.bindVertexArray(this.lineVao);gl.drawArrays(gl.LINES,0,this.lineCoords.length/3);}
if(this.pointCoords.length>0){gl.bindVertexArray(this.pointVao);gl.drawArrays(gl.POINTS,0,this.pointCoords.length/3);}
gl.depthFunc(gl.LEQUAL);gl.bindVertexArray(null);}}
class fmList{constructor(){this.nodeList='';this.elmList='';this.nodeArr=[];this.elmArr=[];}
fromArr(isNode=true){let start='',step,step1,arr,list='';if(isNode){arr=this.nodeArr.sort(fmList.compare);}else{arr=this.elmArr.sort(fmList.compare);}
try{step1=arr[1].id-arr[0].id;}catch(e){step1=null;}
for(let i=0;i<arr.length;i++){step=step1;try{step1=arr[i+2].id-arr[i+1].id;}catch(e){step1=null;}
if(step!=step1||step==null){if(start!=''){list+=' '+start+':'+arr[i+1].id+((step>1)?(':'+step):'');start='';i++;try{step1=arr[i+2].id-arr[i+1].id;}catch(e){step1=null;}}else{list+=' '+arr[i].id;}}else if(start==''){start=arr[i].id;}}
if(isNode){this.nodeList=list;}else{this.elmList=list;}
return list.trim();}
readList(list){this.nodeList=list.match(/(^|\W)(nodes|node|n)(^|\W)(\d| |:)+/i);this.nodeList=this.nodeList?this.nodeList[0].replace(/(nodes|node|n)/i,'').trim():'';this.nodeList=this.nodeList.replace('  ',' ');this.nodeArr=[];this.listToArray(this.nodeList);this.elmList=list.match(/(^|\W)(elements|element|elm|e)($|\W)(\d| |:)+/i);this.elmList=this.elmList?this.elmList[0].replace(/(elements|element|elm|e)/i,'').trim():'';this.elmList=this.elmList.replace('  ',' ');this.elmArr=[];this.listToArray(this.elmList,false);}
listToArray(list,isNode=true){let splitData=list.split(' '),b,start,end,step,tmpNode,tmpElm;for(const data of splitData){b=data.split(':').map(Number);start=b[0];end=b[1]?b[1]:b[0];step=b[2]?b[2]:1;for(let j=start;j<=end;j+=step){if(isNode){tmpNode=fmNodesDict[j];if(tmpNode){this.nodeArr.push(tmpNode);}}else{tmpElm=fmElemsDict[j];if(tmpElm){this.elmArr.push(tmpElm);}}}}}
static compare(a,b){let comparison=0;if(a.id>b.id){comparison=1;}else if(a.id<b.id){comparison=-1;}
return comparison;}}
var fmNodesDict={};var fmElemsDict={};var fmCIDDict={};var fmPropDict={};var fmMatDict={};class fmNode{constructor(id,glID,acid){this.id=id;this.glID=glID;this.acid=acid;this.conElm=[];this.groupShow=1;this.groupSelect=0;this.show=true;this.select=0;fmNodesDict[id]=this;}
get coords(){let off=this.glID*3;return new glVec3(glNodes.coords[off],glNodes.coords[off+1],glNodes.coords[off+2]);}
setStage(){let show;if(this.groupShow&&this.show){if(this.groupSelect||this.select){show=0.6;}else{show=0.9;}}else{show=0;}
glNodes.stage[this.glID]=show;}}
class fmElm{constructor(id,t,c,p,load2GL=true){this.id=id;this.glID=null;this.type=t;this.con=[...c];this.nodeCount=c.length;this.pid=p;this.groupShow=1;this.groupSelect=0;this.show=true;this.select=0;fmElemsDict[id]=this;for(const node of c){node.conElm.push(this);}
if(load2GL)this.load2GL();}
get centroid(){let centr=new glVec3(),inv=1/this.nodeCount;for(let i=0;i<this.nodeCount;i++){centr.scaleAndAdd(this.con[i].coords,inv);}
return centr;}
get eCid(){let nc=this.connectivity,x,y,z;switch(this.nodeCount){case 2:x=glVec3.sub(nc[1].coords,nc[0].coords).normalize();break;case 3:x=glVec3.sub(nc[1].coords,nc[0].coords).normalize();z=glVec3.getNormal(nc[0].coords,nc[1].coords,nc[2].coords);y=glVec3.cross(z,x);break;case 4:let v1=glVec3.sub(nc[2].coords,nc[0].coords).normalize(),v2=glVec3.sub(nc[3].coords,nc[1].coords).normalize();x=glVec3.sub(v1,v2).normalize();y=glVec3.add(v1,v2).normalize();z=glVec3.cross(x,y);break;}
return[x,y,z];}
get normal(){if(this.nodeCount==3||this.nodeCount==4){return this.eCid[2];}}
get glCoords(){let coords,off;if(this.nodeCount==4){coords=new Array(18);off=[this.con[0].glID*3,this.con[1].glID*3,this.con[2].glID*3,this.con[0].glID*3,this.con[2].glID*3,this.con[3].glID*3];for(let i=0;i<6;i++){coords[i*3]=glNodes.coords[off[i]];coords[i*3+1]=glNodes.coords[off[i]+1];coords[i*3+2]=glNodes.coords[off[i]+2];}}else{coords=new Array(this.nodeCount*3);for(let i=0;i<this.nodeCount;i++){off=this.con[i].glID*3;coords[i*3]=glNodes.coords[off];coords[i*3+1]=glNodes.coords[off+1];coords[i*3+2]=glNodes.coords[off+2];}}
return coords;}
setStage(){let off,show;if(this.groupShow&&this.show){if(this.groupSelect||this.select){show=this.nodeCount==2?0.7:0.8;}else{show=1;}}else{show=0;}
if(this.nodeCount==2){off=this.glID*2;glBars.ctrStage[this.glID]=show;glBars.stage[off]=show;glBars.stage[off+1]=show;}else if(this.nodeCount==3){off=this.glID*3;glTrias.stage[off]=show;glTrias.stage[off+1]=show;glTrias.stage[off+2]=show;}else if(this.nodeCount==4){off=this.glID*6;glQuads.stage[off]=show;glQuads.stage[off+1]=show;glQuads.stage[off+2]=show;glQuads.stage[off+3]=show;glQuads.stage[off+4]=show;glQuads.stage[off+5]=show;}}
load2GL(){if(this.nodeCount==2){this.glID=glBars.count++;this.loadBar2GL();}else if(this.nodeCount==3){this.glID=glTrias.count++;this.loadTria2GL();}else if(this.nodeCount==4){this.glID=glQuads.count++;this.loadQuad2GL();}}
loadBar2GL(){const sColor=hover.createColor(this.id*10+2);let off=this.glID*3;glBars.centroids.addBarCentroid(this,off);off*=2;glBars.coords.addElmCords(this,off);glBars.barycentric.append(BARYCENTRIC.BAR,off);off=this.glID*4;glBars.selCtrColors.append(sColor,off);off*=2;glBars.selColors.appendNTimes(sColor,2,off);}
loadTria2GL(){const sColor=hover.createColor(this.id*10+3);let off=this.glID*9;glTrias.coords.addElmCords(this,off);glTrias.barycentric.append(BARYCENTRIC.TRIA,off);glTrias.normals.addElmNormals(this,off);off=this.glID*12;glTrias.selColors.appendNTimes(sColor,3,off);}
loadQuad2GL(){const sColor=hover.createColor(this.id*10+4);let off=this.glID*18;glQuads.coords.addElmCords(this,off);glQuads.barycentric.append(BARYCENTRIC.QUAD,off);glQuads.normals.addElmNormals(this,off);off=this.glID*24;glQuads.selColors.appendNTimes(sColor,6,off);}}
class fmCID{constructor(origin,mat,type){this.origin=new glVec3(origin);this.mat=new glMat33(mat);this.type=type;}
get xAxis(){return new glVec3(this.mat[0][0],this.mat[0][1],this.mat[0][2]);}
get yAxis(){return new glVec3(this.mat[1][0],this.mat[1][1],this.mat[1][2]);}
get zAxis(){return new glVec3(this.mat[2][0],this.mat[2][1],this.mat[2][2]);}
createFrom3Points(p1,p2,p3){this.origin=p1;this.type='R';let u=glVec3.sub(p2,p1).normalize(),v=glVec3.sub(p3,p1).normalize(),w=glVec3.cross(u,v).normalize();v=glVec3.cross(w,u);this.mat.arr33=[[u[0],u[1],u[2]],[v[0],v[1],v[2]],[w[0],w[1],w[2]]];}
multVector(v){return this.mat.multVector(v);}
cylinderDispl(v,c){let cv=glVec3.sub(c,this.origin),nv=new glVec3(this.mat[0][2],this.mat[1][2],this.mat[2][2]),rv=new glVec3((1-nv[0]**2)*cv[0]-nv[0]*nv[1]*cv[1]-nv[0]*nv[2]*cv[2],-nv[0]*nv[1]*cv[0]+(1-nv[1]**2)*cv[1]-nv[1]*nv[2]*cv[2],-nv[0]*nv[2]*cv[0]-nv[1]*nv[2]*cv[1]+(1-nv[2]**2)*cv[2]).normalize(),tv=glVec3.cross(nv,rv);return new glVec3(rv[0]*v[0]+tv[0]*v[1]+nv[0]*v[2],rv[1]*v[0]+tv[1]*v[1]+nv[1]*v[2],rv[2]*v[0]+tv[2]*v[1]+nv[2]*v[2]);}}
class fmPRod{constructor(a,mid){this.a=a;this.mid=mid;}}
class fmPShell{constructor(t,mid){this.t=t;this.mid=mid;}}
class fmPShear{constructor(t,mid){this.t=t;this.mid=mid;}}
class fmMat1{constructor(e,nu){this.e=e;this.nu=nu;}}
fmGroupsDict={};class fmGroup{constructor(name){this.name=name;this.list=new fmList();}
addShow(){for(const elm of this.list.elmArr){elm.groupShow++;}
for(const node of this.list.nodeArr){node.groupShow++;}}
toggleSelection(s,multiple=false){for(const elm of this.list.elmArr){if(s){elm.groupSelect++;}else{elm.groupSelect--;}
if(elm.groupShow){elm.setStage();}}
for(const node of this.list.nodeArr){if(s){node.groupSelect++;}else{node.groupSelect--;}
if(node.groupShow){node.setStage();}}
if(!multiple){model.updateStages();}}
toggleVisibility(v,s,multiple=false){for(const elm of this.list.elmArr){if(v){elm.groupShow++;}else{elm.groupShow--;}
if(!elm.groupShow||elm.groupShow==1){elm.setStage();}}
for(const node of this.list.nodeArr){if(v){node.groupShow++;if(s){node.groupSelect++;}}else{node.groupShow--;if(s){node.groupSelect--;}}
if(!node.groupShow||node.groupShow==1){node.setStage();}}
if(!multiple){model.updateStages();model.updateSelectStages();}}}
var fmVectors={arrows:[],addVector:function(origin,vec,value,color,isMoment=false){let sgn=Math.sign(value),arrow=new glArrow();arrow.value=value;arrow.origin=[...origin,1];arrow.direction=[sgn*vec[0],sgn*vec[1],sgn*vec[2]];if(isMoment)
arrow.addMomArrow();else
arrow.addArrow();arrow.color=color;arrow.size=0.1;arrow.initBuffers();glText.vectorText.push(value.toFixed(2));this.arrows.push(arrow);},getTextCoords:function(textCoords,start){let off=start,scale=3*17/camera.curZoom;for(const arrow of fmVectors.arrows){textCoords[off]=arrow.origin[0]+arrow.direction[0]*scale;textCoords[off+1]=arrow.origin[1]+arrow.direction[1]*scale;textCoords[off+2]=arrow.origin[2]+arrow.direction[2]*scale;off+=3;}}};class $loadModel{constructor(){}
load(bdfData){let count;model=new $glMesh();this.loadNodes(bdfData.GRID[0]);count=0;count+=bdfData.CROD[0].count||0;count+=bdfData.CBAR[0].count||0;count+=bdfData.CBEAM[0].count||0;if(count){glBars.ctrStage=new Float32Array(count);glBars.ctrStage.fill(1);glBars.stage=new Float32Array(count*2);glBars.stage.fill(1);glBars.centroids=new Float32Array(count*3);glBars.selCtrColors=new Float32Array(count*4);glBars.coords=new Float32Array(count*6);glBars.barycentric=new Float32Array(count*6);glBars.colors=new Float32Array(count*8);glBars.colors.appendNTimes([1,1,0,1],count*2,0);glBars.selColors=new Float32Array(count*8);if(bdfData.hasOwnProperty('CROD'))
this.loadElm(bdfData.CROD[0],"CROD",2);if(bdfData.hasOwnProperty('CBAR'))
this.loadElm(bdfData.CBAR[0],"CBAR",2);if(bdfData.hasOwnProperty('CBEAM'))
this.loadElm(bdfData.CBEAM[0],"CBEAM",2);}
count=0;count+=bdfData.CTRIA3[0].count||0;if(count){glTrias.stage=new Float32Array(count*3);glTrias.stage.fill(1);glTrias.coords=new Float32Array(count*9);glTrias.barycentric=new Float32Array(count*9);glTrias.normals=new Float32Array(count*9);glTrias.colors=new Float32Array(count*12);glTrias.colors.appendNTimes([0.17,0.45,0.7,1.0],count*3,0);glTrias.selColors=new Float32Array(count*12);this.loadElm(bdfData.CTRIA3[0],"CTRIA3",3);}
count=0;count+=bdfData.CQUAD4[0].count||0;count+=bdfData.CSHEAR[0].count||0;if(count){glQuads.stage=new Float32Array(count*6);glQuads.stage.fill(1);glQuads.coords=new Float32Array(count*18);glQuads.barycentric=new Float32Array(count*18);glQuads.normals=new Float32Array(count*18);glQuads.colors=new Float32Array(count*24);glQuads.colors.appendNTimes([0.17,0.45,0.7,1.0],count*6,0);glQuads.selColors=new Float32Array(count*24);if(bdfData.hasOwnProperty('CQUAD4'))
this.loadElm(bdfData.CQUAD4[0],"CQUAD4",4);if(bdfData.hasOwnProperty('CSHEAR'))
this.loadElm(bdfData.CSHEAR[0],"CSHEAR",4);}
if(bdfData.hasOwnProperty('CORDR'))
this.loadCID(bdfData.CORDR[0],'R');if(bdfData.hasOwnProperty('CORDC'))
this.loadCID(bdfData.CORDC[0],'C');if(bdfData.hasOwnProperty('PROD'))
this.loadProp(bdfData.PROD[0],'PROD');if(bdfData.hasOwnProperty('PSHELL'))
this.loadProp(bdfData.PSHELL[0],'PSHELL');if(bdfData.hasOwnProperty('PSHEAR'))
this.loadProp(bdfData.PSHEAR[0],'PSHEAR');if(bdfData.hasOwnProperty('MAT1'))
this.loadMat(bdfData.MAT1[0],'MAT1');model.init();model.hasMoments=bdfData.dbMoments;}
loadNodes(inpData){let count=inpData.count,ids=this.listToArray(inpData.ids),acid=this.matListToArray(inpData.acid),tmpNode,sColor,off;glNodes.count=count;glNodes.stage=new Float32Array(count);glNodes.stage.fill(0.9);glNodes.selColors=new Float32Array(count*4);glNodes.colors=new Float32Array(count*4);glNodes.colors.appendNTimes([0.9,0,0,1],count,0);glNodes.coords=new Float32Array(inpData.coords);for(let i=0;i<count;i++){tmpNode=new fmNode(ids[i],i,acid[i]);sColor=hover.createColor(tmpNode.id*10+1);off=i*4;glNodes.selColors.append(sColor,off);}}
loadElm(inpData,inpType,nCount){let count=inpData.count,ids=this.listToArray(inpData.ids),pids=inpData.pid=='same'?ids:this.listToArray(inpData.pid),ni=inpData.connectivity,con=new Array(nCount),tmpElm;for(let i=0;i<count;i++){for(let j=0;j<nCount;j++){con[j]=fmNodesDict[ni[i*nCount+j]];}
tmpElm=new fmElm(ids[i],inpType,con,pids[i]);}}
loadCID(inpData,inpType){let count=inpData.count,ids=this.listToArray(inpData.ids),offO,offM,tmpCID;for(let i=0;i<count;i++){offO=i*3;offM=i*9;tmpCID=new fmCID([inpData.origin[offO],inpData.origin[offO+1],inpData.origin[offO+2]],[[inpData.mat[offM],inpData.mat[offM+3],inpData.mat[offM+6]],[inpData.mat[offM+1],inpData.mat[offM+4],inpData.mat[offM+7]],[inpData.mat[offM+2],inpData.mat[offM+5],inpData.mat[offM+8]]],inpType);fmCIDDict[ids[i]]=tmpCID;}}
loadProp(inpData,inpType){let count=inpData.count,ids=this.listToArray(inpData.ids),mids=this.matListToArray(inpData.mid),tmpProp;for(let i=0;i<count;i++){if(inpType=='PROD')
tmpProp=new fmPRod(inpData.area[i],mids[i]);else if(inpType=='PSHELL')
tmpProp=new fmPShell(inpData.t[i],mids[i]);else if(inpType=='PSHEAR')
tmpProp=new fmPShear(inpData.t[i],mids[i]);fmPropDict[ids[i]]=tmpProp;}}
loadMat(inpData,inpType){let count=inpData.count,ids=this.listToArray(inpData.ids),tmpMat;for(let i=0;i<count;i++){if(inpType=='MAT1')
tmpMat=new fmMat1(inpData.e[i],inpData.nu[i]);fmMatDict[ids[i]]=tmpMat;}}
listToArray(list){let splitData=list.trim().split(' '),b,start,end,step,arr=[];for(const data of splitData){b=data.split(':').map(Number);start=b[0];end=b[1]?b[1]:b[0];step=b[2]?b[2]:1;for(let j=start;j<=end;j+=step){arr.push(j);}}
return arr;}
matListToArray(list){let splitData=list.trim().split(' '),b,id,iter,arr=[];for(const data of splitData){b=data.split('x').map(Number);id=b[0];iter=b[1]?b[1]:1;for(let j=0;j<iter;j++){arr.push(id);}}
return arr;}}
const loadModel=new $loadModel();class $importBdf{constructor(inpFiles){let reader=new FileReader();loaderShow();model=new $glMesh();reader.onloadend=this.readBdf;this.filesCount=inpFiles.length;this.filesReaded=0;glNodes.coords=[];glNodes.colors=[];glNodes.selColors=[];glNodes.stage=[];for(const inpFile of inpFiles){reader.readAsBinaryString(inpFile);}}
readBdf(e){let fr=e.target,self=importBdf,i=0,sColor,tmpNode,tmpElm,con,card,nextline;if(fr.readyState==FileReader.DONE){let fileData=fr.result.split(/\r\n|\n/);nextline=self.readBdfLine(fileData,i++);while(i<fileData.length){card=nextline;while(true){nextline=self.readBdfLine(fileData,i++);if(nextline.length==0)break;if(!nextline.hasOwnProperty('dontSkip'))break;card.push(...nextline);}
if(card.length==0)continue;if(!card[0].includes('$')){switch(card[0]){case'GRID':tmpNode=fmNodesDict[card[1]];if(!tmpNode){tmpNode=new fmNode(card[1],glNodes.count++,card[2]);}else{tmpNode.glID=glNodes.count++;tmpNode.acid=card[2];}
sColor=hover.createColor(tmpNode.id*10+1);glNodes.coords.push(card[3],card[4],card[5]);glNodes.selColors.push(...sColor);break;case'CROD':case'CBEAM':case'CBAR':glBars.count++;con=[self.checkNode(card[3]),self.checkNode(card[4])];tmpElm=new fmElm(card[1],card[0],con,card[2],false);break;case'CTRIA3':glTrias.count++;con=[self.checkNode(card[3]),self.checkNode(card[4]),self.checkNode(card[5])];tmpElm=new fmElm(card[1],card[0],con,card[2],false);break;case'CQUAD4':case'CSHEAR':glQuads.count++;con=[self.checkNode(card[3]),self.checkNode(card[4]),self.checkNode(card[5]),self.checkNode(card[6])];tmpElm=new fmElm(card[1],card[0],con,card[2],false);break;}}}}
self.filesReaded++;if(self.filesReaded==self.filesCount){self.finishImport();}}
checkNode(id){let node=fmNodesDict[id];if(node){return node;}else{return new fmNode(id,null,null);}}
finishImport(){glNodes.coords=new Float32Array(glNodes.coords);glNodes.selColors=new Float32Array(glNodes.selColors);glNodes.colors=new Float32Array(glNodes.count*4);glNodes.stage=new Float32Array(glNodes.count);glNodes.stage.fill(0.9);glNodes.colors.appendNTimes([0.9,0,0,1],glNodes.count,0);glBars.ctrStage=new Float32Array(glBars.count);glBars.centroids=new Float32Array(glBars.count*3);glBars.selCtrColors=new Float32Array(glBars.count*4);glBars.coords=new Float32Array(glBars.count*6);glBars.barycentric=new Float32Array(glBars.count*6);glBars.selColors=new Float32Array(glBars.count*8);glBars.stage=new Float32Array(glBars.count*2);glBars.colors=new Float32Array(glBars.count*8);glBars.ctrStage.fill(1);glBars.stage.fill(1);glBars.colors.appendNTimes([1,1,0,1],glBars.count*2,0);glTrias.stage=new Float32Array(glTrias.count*3);glTrias.colors=new Float32Array(glTrias.count*12);glTrias.coords=new Float32Array(glTrias.count*9);glTrias.barycentric=new Float32Array(glTrias.count*9);glTrias.normals=new Float32Array(glTrias.count*9);glTrias.selColors=new Float32Array(glTrias.count*12);glTrias.stage.fill(1);glTrias.colors.appendNTimes([0.17,0.45,0.7,1.0],glTrias.count*3,0);glQuads.stage=new Float32Array(glQuads.count*6);glQuads.selColors=new Float32Array(glQuads.count*24);glQuads.coords=new Float32Array(glQuads.count*18);glQuads.barycentric=new Float32Array(glQuads.count*18);glQuads.normals=new Float32Array(glQuads.count*18);glQuads.colors=new Float32Array(glQuads.count*24);glQuads.stage.fill(1);glQuads.colors.appendNTimes([0.17,0.45,0.7,1.0],glQuads.count*6,0);glBars.count=0;glTrias.count=0;glQuads.count=0;for(const[key,elm]of Object.entries(fmElemsDict)){elm.load2GL();}
model.init();loaderFade();}
parseBdfStr(str){if(str.search(/[\d\.][+\-]/)>-1){str=str[0]+str.substr(1).replace('+','e+');str=str[0]+str.substr(1).replace('-','e-');}
const f=parseFloat(str);if(isNaN(f))
return str.trim();else
return f;}
readBdfLine(fileData,off){let line=fileData[off],line_list=[];if(!line||line.includes('$'))
return line_list;const s=line.includes('*')?16:8;const firstWord=line.substr(0,8).replace('*','').trim().toUpperCase();if(firstWord)
line_list.push(firstWord);else
line_list.dontSkip=true;for(let i=8;i<line.length;i+=s){line_list.push(this.parseBdfStr(line.substr(i,s)));}
return line_list;}}
let importBdf=null;class $importGroups{constructor(inpFiles){let inpFile=inpFiles[0];let reader=new FileReader();if(!model)
return;loaderShow();reader.onloadend=function(e){const fr=e.target;if(fr.readyState==FileReader.DONE){let groupName,lineData,curGroup,fileData=fr.result.replace(/" [\/][\/] @(\r\n|\n)"/g,'');for(const[key,elm]of Object.entries(fmElemsDict)){elm.groupShow=0;elm.groupSelect=0;}
for(const[key,node]of Object.entries(fmNodesDict)){node.groupShow=0;node.groupSelect=0;}
fileData=fileData.split(/\r\n|\n/);for(let i=0;i<fileData.length;i++){if(fileData[i].indexOf('ga_group_create')>-1){groupName=fileData[i].match(/".*?"/);if(groupName){groupName=groupName[0].replace(/"/g,'');}
tree.addGroup(new guiGroup(groupName));fmGroupsDict[groupName]=new fmGroup(groupName);}else if(fileData[i].indexOf('ga_group_entity_add')>-1){lineData=fileData[i].match(/".*?"/g);if(lineData){groupName=lineData[0].replace(/"/g,'');curGroup=fmGroupsDict[groupName];if(curGroup){curGroup.list.readList(lineData[1]);curGroup.addShow();}}}}
for(const[key,node]of Object.entries(fmNodesDict))
node.setStage();for(const[key,elm]of Object.entries(fmElemsDict))
elm.setStage();model.updateStages();model.updateSelectStages();}
loaderFade();};reader.readAsBinaryString(inpFile);}}